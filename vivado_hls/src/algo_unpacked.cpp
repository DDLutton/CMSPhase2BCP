#include <stdio.h>                                                                                                                                                                   
#include <stdlib.h>
#include <stdint.h>
#include <unistd.h>

#include <iostream>
#include <fstream>
#include <iomanip>
#include <string>

using namespace std;
//Not entirely sure what is happening here. In the current git commit the algo_unpacked.h file is in the same folder
//as the TPG.hh file which is in the same folder as the algo_unpacked stuff (all in src)
//What is hls_algo?
#include "algo_unpacked.h"   // This is where you should have had hls_algo - if not find the header file and fix this - please do not copy this file as that defines the interface
//#include "../src/algo_unpacked.h"
#include "TPG.hh"
#include "../data/LUT.h"
 /*
  * algo_unpacked interface exposes fully unpacked input and output link data.
  * This version assumes use of 10G 8b10b links, and thus providing 192bits/BX/link.
  *
  * !!! N.B.: Do NOT use the first bytes of link_in/link_out (i.e. link_in/link_out[].range(7,0)
  * as this portion is reserved for transmission of 8b10b input/output link alignment markers.
  *
  * The remaining 184 bits are available for algorithm use.
  *
  * !!! N.B. 2: make sure to assign every bit of link_out[] data. First byte should be assigned zero.
  */

void algo_unpacked(ap_uint<192> link_in[N_CH_IN], ap_uint<192> link_out[N_CH_OUT])
{

// !!! Retain these 4 #pragma directives below in your algo_unpacked implementation !!!
#pragma HLS ARRAY_PARTITION variable=link_in complete dim=0
#pragma HLS ARRAY_PARTITION variable=link_out complete dim=0
#pragma HLS PIPELINE II=3
#pragma HLS INTERFACE ap_ctrl_hs port=return

static registers reg[N_CH_IN][NCrystalsPerLink];
#pragma HLS ARRAY_PARTITION variable=reg complete dim=0



link_out[0].range(15,0)=0
link_out[0].range(31, 16) = TPG(link_in[0].range(29, 16), coeff[(0*10)+j], reg[0][0])
link_out[0].range(47, 32) = TPG(link_in[0].range(45, 32), coeff[(0*10)+j], reg[0][1])
link_out[0].range(63, 48) = TPG(link_in[0].range(61, 48), coeff[(0*10)+j], reg[0][2])
link_out[0].range(79, 64) = TPG(link_in[0].range(77, 64), coeff[(0*10)+j], reg[0][3])
link_out[0].range(95, 80) = TPG(link_in[0].range(93, 80), coeff[(0*10)+j], reg[0][4])
link_out[0].range(111, 96) = TPG(link_in[0].range(109, 96), coeff[(0*10)+j], reg[0][5])
link_out[0].range(127, 112) = TPG(link_in[0].range(125, 112), coeff[(0*10)+j], reg[0][6])
link_out[0].range(143, 128) = TPG(link_in[0].range(141, 128), coeff[(0*10)+j], reg[0][7])
link_out[0].range(159, 144) = TPG(link_in[0].range(157, 144), coeff[(0*10)+j], reg[0][8])
link_out[0].range(175, 160) = TPG(link_in[0].range(173, 160), coeff[(0*10)+j], reg[0][9])
link_out[0].range(191, 176) = TPG(link_in[0].range(189, 176), coeff[(0*10)+j], reg[0][10])
link_out[1].range(15,0)=0
link_out[1].range(31, 16) = TPG(link_in[1].range(29, 16), coeff[(1*10)+j], reg[1][0])
link_out[1].range(47, 32) = TPG(link_in[1].range(45, 32), coeff[(1*10)+j], reg[1][1])
link_out[1].range(63, 48) = TPG(link_in[1].range(61, 48), coeff[(1*10)+j], reg[1][2])
link_out[1].range(79, 64) = TPG(link_in[1].range(77, 64), coeff[(1*10)+j], reg[1][3])
link_out[1].range(95, 80) = TPG(link_in[1].range(93, 80), coeff[(1*10)+j], reg[1][4])
link_out[1].range(111, 96) = TPG(link_in[1].range(109, 96), coeff[(1*10)+j], reg[1][5])
link_out[1].range(127, 112) = TPG(link_in[1].range(125, 112), coeff[(1*10)+j], reg[1][6])
link_out[1].range(143, 128) = TPG(link_in[1].range(141, 128), coeff[(1*10)+j], reg[1][7])
link_out[1].range(159, 144) = TPG(link_in[1].range(157, 144), coeff[(1*10)+j], reg[1][8])
link_out[1].range(175, 160) = TPG(link_in[1].range(173, 160), coeff[(1*10)+j], reg[1][9])
link_out[1].range(191, 176) = TPG(link_in[1].range(189, 176), coeff[(1*10)+j], reg[1][10])
link_out[2].range(15,0)=0
link_out[2].range(31, 16) = TPG(link_in[2].range(29, 16), coeff[(2*10)+j], reg[2][0])
link_out[2].range(47, 32) = TPG(link_in[2].range(45, 32), coeff[(2*10)+j], reg[2][1])
link_out[2].range(63, 48) = TPG(link_in[2].range(61, 48), coeff[(2*10)+j], reg[2][2])
link_out[2].range(79, 64) = TPG(link_in[2].range(77, 64), coeff[(2*10)+j], reg[2][3])
link_out[2].range(95, 80) = TPG(link_in[2].range(93, 80), coeff[(2*10)+j], reg[2][4])
link_out[2].range(111, 96) = TPG(link_in[2].range(109, 96), coeff[(2*10)+j], reg[2][5])
link_out[2].range(127, 112) = TPG(link_in[2].range(125, 112), coeff[(2*10)+j], reg[2][6])
link_out[2].range(143, 128) = TPG(link_in[2].range(141, 128), coeff[(2*10)+j], reg[2][7])
link_out[2].range(159, 144) = TPG(link_in[2].range(157, 144), coeff[(2*10)+j], reg[2][8])
link_out[2].range(175, 160) = TPG(link_in[2].range(173, 160), coeff[(2*10)+j], reg[2][9])
link_out[2].range(191, 176) = TPG(link_in[2].range(189, 176), coeff[(2*10)+j], reg[2][10])
link_out[3].range(15,0)=0
link_out[3].range(31, 16) = TPG(link_in[3].range(29, 16), coeff[(3*10)+j], reg[3][0])
link_out[3].range(47, 32) = TPG(link_in[3].range(45, 32), coeff[(3*10)+j], reg[3][1])
link_out[3].range(63, 48) = TPG(link_in[3].range(61, 48), coeff[(3*10)+j], reg[3][2])
link_out[3].range(79, 64) = TPG(link_in[3].range(77, 64), coeff[(3*10)+j], reg[3][3])
link_out[3].range(95, 80) = TPG(link_in[3].range(93, 80), coeff[(3*10)+j], reg[3][4])
link_out[3].range(111, 96) = TPG(link_in[3].range(109, 96), coeff[(3*10)+j], reg[3][5])
link_out[3].range(127, 112) = TPG(link_in[3].range(125, 112), coeff[(3*10)+j], reg[3][6])
link_out[3].range(143, 128) = TPG(link_in[3].range(141, 128), coeff[(3*10)+j], reg[3][7])
link_out[3].range(159, 144) = TPG(link_in[3].range(157, 144), coeff[(3*10)+j], reg[3][8])
link_out[3].range(175, 160) = TPG(link_in[3].range(173, 160), coeff[(3*10)+j], reg[3][9])
link_out[3].range(191, 176) = TPG(link_in[3].range(189, 176), coeff[(3*10)+j], reg[3][10])
link_out[4].range(15,0)=0
link_out[4].range(31, 16) = TPG(link_in[4].range(29, 16), coeff[(4*10)+j], reg[4][0])
link_out[4].range(47, 32) = TPG(link_in[4].range(45, 32), coeff[(4*10)+j], reg[4][1])
link_out[4].range(63, 48) = TPG(link_in[4].range(61, 48), coeff[(4*10)+j], reg[4][2])
link_out[4].range(79, 64) = TPG(link_in[4].range(77, 64), coeff[(4*10)+j], reg[4][3])
link_out[4].range(95, 80) = TPG(link_in[4].range(93, 80), coeff[(4*10)+j], reg[4][4])
link_out[4].range(111, 96) = TPG(link_in[4].range(109, 96), coeff[(4*10)+j], reg[4][5])
link_out[4].range(127, 112) = TPG(link_in[4].range(125, 112), coeff[(4*10)+j], reg[4][6])
link_out[4].range(143, 128) = TPG(link_in[4].range(141, 128), coeff[(4*10)+j], reg[4][7])
link_out[4].range(159, 144) = TPG(link_in[4].range(157, 144), coeff[(4*10)+j], reg[4][8])
link_out[4].range(175, 160) = TPG(link_in[4].range(173, 160), coeff[(4*10)+j], reg[4][9])
link_out[4].range(191, 176) = TPG(link_in[4].range(189, 176), coeff[(4*10)+j], reg[4][10])
link_out[5].range(15,0)=0
link_out[5].range(31, 16) = TPG(link_in[5].range(29, 16), coeff[(5*10)+j], reg[5][0])
link_out[5].range(47, 32) = TPG(link_in[5].range(45, 32), coeff[(5*10)+j], reg[5][1])
link_out[5].range(63, 48) = TPG(link_in[5].range(61, 48), coeff[(5*10)+j], reg[5][2])
link_out[5].range(79, 64) = TPG(link_in[5].range(77, 64), coeff[(5*10)+j], reg[5][3])
link_out[5].range(95, 80) = TPG(link_in[5].range(93, 80), coeff[(5*10)+j], reg[5][4])
link_out[5].range(111, 96) = TPG(link_in[5].range(109, 96), coeff[(5*10)+j], reg[5][5])
link_out[5].range(127, 112) = TPG(link_in[5].range(125, 112), coeff[(5*10)+j], reg[5][6])
link_out[5].range(143, 128) = TPG(link_in[5].range(141, 128), coeff[(5*10)+j], reg[5][7])
link_out[5].range(159, 144) = TPG(link_in[5].range(157, 144), coeff[(5*10)+j], reg[5][8])
link_out[5].range(175, 160) = TPG(link_in[5].range(173, 160), coeff[(5*10)+j], reg[5][9])
link_out[5].range(191, 176) = TPG(link_in[5].range(189, 176), coeff[(5*10)+j], reg[5][10])
link_out[6].range(15,0)=0
link_out[6].range(31, 16) = TPG(link_in[6].range(29, 16), coeff[(6*10)+j], reg[6][0])
link_out[6].range(47, 32) = TPG(link_in[6].range(45, 32), coeff[(6*10)+j], reg[6][1])
link_out[6].range(63, 48) = TPG(link_in[6].range(61, 48), coeff[(6*10)+j], reg[6][2])
link_out[6].range(79, 64) = TPG(link_in[6].range(77, 64), coeff[(6*10)+j], reg[6][3])
link_out[6].range(95, 80) = TPG(link_in[6].range(93, 80), coeff[(6*10)+j], reg[6][4])
link_out[6].range(111, 96) = TPG(link_in[6].range(109, 96), coeff[(6*10)+j], reg[6][5])
link_out[6].range(127, 112) = TPG(link_in[6].range(125, 112), coeff[(6*10)+j], reg[6][6])
link_out[6].range(143, 128) = TPG(link_in[6].range(141, 128), coeff[(6*10)+j], reg[6][7])
link_out[6].range(159, 144) = TPG(link_in[6].range(157, 144), coeff[(6*10)+j], reg[6][8])
link_out[6].range(175, 160) = TPG(link_in[6].range(173, 160), coeff[(6*10)+j], reg[6][9])
link_out[6].range(191, 176) = TPG(link_in[6].range(189, 176), coeff[(6*10)+j], reg[6][10])
link_out[7].range(15,0)=0
link_out[7].range(31, 16) = TPG(link_in[7].range(29, 16), coeff[(7*10)+j], reg[7][0])
link_out[7].range(47, 32) = TPG(link_in[7].range(45, 32), coeff[(7*10)+j], reg[7][1])
link_out[7].range(63, 48) = TPG(link_in[7].range(61, 48), coeff[(7*10)+j], reg[7][2])
link_out[7].range(79, 64) = TPG(link_in[7].range(77, 64), coeff[(7*10)+j], reg[7][3])
link_out[7].range(95, 80) = TPG(link_in[7].range(93, 80), coeff[(7*10)+j], reg[7][4])
link_out[7].range(111, 96) = TPG(link_in[7].range(109, 96), coeff[(7*10)+j], reg[7][5])
link_out[7].range(127, 112) = TPG(link_in[7].range(125, 112), coeff[(7*10)+j], reg[7][6])
link_out[7].range(143, 128) = TPG(link_in[7].range(141, 128), coeff[(7*10)+j], reg[7][7])
link_out[7].range(159, 144) = TPG(link_in[7].range(157, 144), coeff[(7*10)+j], reg[7][8])
link_out[7].range(175, 160) = TPG(link_in[7].range(173, 160), coeff[(7*10)+j], reg[7][9])
link_out[7].range(191, 176) = TPG(link_in[7].range(189, 176), coeff[(7*10)+j], reg[7][10])
link_out[8].range(15,0)=0
link_out[8].range(31, 16) = TPG(link_in[8].range(29, 16), coeff[(8*10)+j], reg[8][0])
link_out[8].range(47, 32) = TPG(link_in[8].range(45, 32), coeff[(8*10)+j], reg[8][1])
link_out[8].range(63, 48) = TPG(link_in[8].range(61, 48), coeff[(8*10)+j], reg[8][2])
link_out[8].range(79, 64) = TPG(link_in[8].range(77, 64), coeff[(8*10)+j], reg[8][3])
link_out[8].range(95, 80) = TPG(link_in[8].range(93, 80), coeff[(8*10)+j], reg[8][4])
link_out[8].range(111, 96) = TPG(link_in[8].range(109, 96), coeff[(8*10)+j], reg[8][5])
link_out[8].range(127, 112) = TPG(link_in[8].range(125, 112), coeff[(8*10)+j], reg[8][6])
link_out[8].range(143, 128) = TPG(link_in[8].range(141, 128), coeff[(8*10)+j], reg[8][7])
link_out[8].range(159, 144) = TPG(link_in[8].range(157, 144), coeff[(8*10)+j], reg[8][8])
link_out[8].range(175, 160) = TPG(link_in[8].range(173, 160), coeff[(8*10)+j], reg[8][9])
link_out[8].range(191, 176) = TPG(link_in[8].range(189, 176), coeff[(8*10)+j], reg[8][10])
link_out[9].range(15,0)=0
link_out[9].range(31, 16) = TPG(link_in[9].range(29, 16), coeff[(9*10)+j], reg[9][0])
link_out[9].range(47, 32) = TPG(link_in[9].range(45, 32), coeff[(9*10)+j], reg[9][1])
link_out[9].range(63, 48) = TPG(link_in[9].range(61, 48), coeff[(9*10)+j], reg[9][2])
link_out[9].range(79, 64) = TPG(link_in[9].range(77, 64), coeff[(9*10)+j], reg[9][3])
link_out[9].range(95, 80) = TPG(link_in[9].range(93, 80), coeff[(9*10)+j], reg[9][4])
link_out[9].range(111, 96) = TPG(link_in[9].range(109, 96), coeff[(9*10)+j], reg[9][5])
link_out[9].range(127, 112) = TPG(link_in[9].range(125, 112), coeff[(9*10)+j], reg[9][6])
link_out[9].range(143, 128) = TPG(link_in[9].range(141, 128), coeff[(9*10)+j], reg[9][7])
link_out[9].range(159, 144) = TPG(link_in[9].range(157, 144), coeff[(9*10)+j], reg[9][8])
link_out[9].range(175, 160) = TPG(link_in[9].range(173, 160), coeff[(9*10)+j], reg[9][9])
link_out[9].range(191, 176) = TPG(link_in[9].range(189, 176), coeff[(9*10)+j], reg[9][10])
link_out[10].range(15,0)=0
link_out[10].range(31, 16) = TPG(link_in[10].range(29, 16), coeff[(10*10)+j], reg[10][0])
link_out[10].range(47, 32) = TPG(link_in[10].range(45, 32), coeff[(10*10)+j], reg[10][1])
link_out[10].range(63, 48) = TPG(link_in[10].range(61, 48), coeff[(10*10)+j], reg[10][2])
link_out[10].range(79, 64) = TPG(link_in[10].range(77, 64), coeff[(10*10)+j], reg[10][3])
link_out[10].range(95, 80) = TPG(link_in[10].range(93, 80), coeff[(10*10)+j], reg[10][4])
link_out[10].range(111, 96) = TPG(link_in[10].range(109, 96), coeff[(10*10)+j], reg[10][5])
link_out[10].range(127, 112) = TPG(link_in[10].range(125, 112), coeff[(10*10)+j], reg[10][6])
link_out[10].range(143, 128) = TPG(link_in[10].range(141, 128), coeff[(10*10)+j], reg[10][7])
link_out[10].range(159, 144) = TPG(link_in[10].range(157, 144), coeff[(10*10)+j], reg[10][8])
link_out[10].range(175, 160) = TPG(link_in[10].range(173, 160), coeff[(10*10)+j], reg[10][9])
link_out[10].range(191, 176) = TPG(link_in[10].range(189, 176), coeff[(10*10)+j], reg[10][10])
link_out[11].range(15,0)=0
link_out[11].range(31, 16) = TPG(link_in[11].range(29, 16), coeff[(11*10)+j], reg[11][0])
link_out[11].range(47, 32) = TPG(link_in[11].range(45, 32), coeff[(11*10)+j], reg[11][1])
link_out[11].range(63, 48) = TPG(link_in[11].range(61, 48), coeff[(11*10)+j], reg[11][2])
link_out[11].range(79, 64) = TPG(link_in[11].range(77, 64), coeff[(11*10)+j], reg[11][3])
link_out[11].range(95, 80) = TPG(link_in[11].range(93, 80), coeff[(11*10)+j], reg[11][4])
link_out[11].range(111, 96) = TPG(link_in[11].range(109, 96), coeff[(11*10)+j], reg[11][5])
link_out[11].range(127, 112) = TPG(link_in[11].range(125, 112), coeff[(11*10)+j], reg[11][6])
link_out[11].range(143, 128) = TPG(link_in[11].range(141, 128), coeff[(11*10)+j], reg[11][7])
link_out[11].range(159, 144) = TPG(link_in[11].range(157, 144), coeff[(11*10)+j], reg[11][8])
link_out[11].range(175, 160) = TPG(link_in[11].range(173, 160), coeff[(11*10)+j], reg[11][9])
link_out[11].range(191, 176) = TPG(link_in[11].range(189, 176), coeff[(11*10)+j], reg[11][10])
link_out[12].range(15,0)=0
link_out[12].range(31, 16) = TPG(link_in[12].range(29, 16), coeff[(12*10)+j], reg[12][0])
link_out[12].range(47, 32) = TPG(link_in[12].range(45, 32), coeff[(12*10)+j], reg[12][1])
link_out[12].range(63, 48) = TPG(link_in[12].range(61, 48), coeff[(12*10)+j], reg[12][2])
link_out[12].range(79, 64) = TPG(link_in[12].range(77, 64), coeff[(12*10)+j], reg[12][3])
link_out[12].range(95, 80) = TPG(link_in[12].range(93, 80), coeff[(12*10)+j], reg[12][4])
link_out[12].range(111, 96) = TPG(link_in[12].range(109, 96), coeff[(12*10)+j], reg[12][5])
link_out[12].range(127, 112) = TPG(link_in[12].range(125, 112), coeff[(12*10)+j], reg[12][6])
link_out[12].range(143, 128) = TPG(link_in[12].range(141, 128), coeff[(12*10)+j], reg[12][7])
link_out[12].range(159, 144) = TPG(link_in[12].range(157, 144), coeff[(12*10)+j], reg[12][8])
link_out[12].range(175, 160) = TPG(link_in[12].range(173, 160), coeff[(12*10)+j], reg[12][9])
link_out[12].range(191, 176) = TPG(link_in[12].range(189, 176), coeff[(12*10)+j], reg[12][10])
link_out[13].range(15,0)=0
link_out[13].range(31, 16) = TPG(link_in[13].range(29, 16), coeff[(13*10)+j], reg[13][0])
link_out[13].range(47, 32) = TPG(link_in[13].range(45, 32), coeff[(13*10)+j], reg[13][1])
link_out[13].range(63, 48) = TPG(link_in[13].range(61, 48), coeff[(13*10)+j], reg[13][2])
link_out[13].range(79, 64) = TPG(link_in[13].range(77, 64), coeff[(13*10)+j], reg[13][3])
link_out[13].range(95, 80) = TPG(link_in[13].range(93, 80), coeff[(13*10)+j], reg[13][4])
link_out[13].range(111, 96) = TPG(link_in[13].range(109, 96), coeff[(13*10)+j], reg[13][5])
link_out[13].range(127, 112) = TPG(link_in[13].range(125, 112), coeff[(13*10)+j], reg[13][6])
link_out[13].range(143, 128) = TPG(link_in[13].range(141, 128), coeff[(13*10)+j], reg[13][7])
link_out[13].range(159, 144) = TPG(link_in[13].range(157, 144), coeff[(13*10)+j], reg[13][8])
link_out[13].range(175, 160) = TPG(link_in[13].range(173, 160), coeff[(13*10)+j], reg[13][9])
link_out[13].range(191, 176) = TPG(link_in[13].range(189, 176), coeff[(13*10)+j], reg[13][10])
link_out[14].range(15,0)=0
link_out[14].range(31, 16) = TPG(link_in[14].range(29, 16), coeff[(14*10)+j], reg[14][0])
link_out[14].range(47, 32) = TPG(link_in[14].range(45, 32), coeff[(14*10)+j], reg[14][1])
link_out[14].range(63, 48) = TPG(link_in[14].range(61, 48), coeff[(14*10)+j], reg[14][2])
link_out[14].range(79, 64) = TPG(link_in[14].range(77, 64), coeff[(14*10)+j], reg[14][3])
link_out[14].range(95, 80) = TPG(link_in[14].range(93, 80), coeff[(14*10)+j], reg[14][4])
link_out[14].range(111, 96) = TPG(link_in[14].range(109, 96), coeff[(14*10)+j], reg[14][5])
link_out[14].range(127, 112) = TPG(link_in[14].range(125, 112), coeff[(14*10)+j], reg[14][6])
link_out[14].range(143, 128) = TPG(link_in[14].range(141, 128), coeff[(14*10)+j], reg[14][7])
link_out[14].range(159, 144) = TPG(link_in[14].range(157, 144), coeff[(14*10)+j], reg[14][8])
link_out[14].range(175, 160) = TPG(link_in[14].range(173, 160), coeff[(14*10)+j], reg[14][9])
link_out[14].range(191, 176) = TPG(link_in[14].range(189, 176), coeff[(14*10)+j], reg[14][10])
link_out[15].range(15,0)=0
link_out[15].range(31, 16) = TPG(link_in[15].range(29, 16), coeff[(15*10)+j], reg[15][0])
link_out[15].range(47, 32) = TPG(link_in[15].range(45, 32), coeff[(15*10)+j], reg[15][1])
link_out[15].range(63, 48) = TPG(link_in[15].range(61, 48), coeff[(15*10)+j], reg[15][2])
link_out[15].range(79, 64) = TPG(link_in[15].range(77, 64), coeff[(15*10)+j], reg[15][3])
link_out[15].range(95, 80) = TPG(link_in[15].range(93, 80), coeff[(15*10)+j], reg[15][4])
link_out[15].range(111, 96) = TPG(link_in[15].range(109, 96), coeff[(15*10)+j], reg[15][5])
link_out[15].range(127, 112) = TPG(link_in[15].range(125, 112), coeff[(15*10)+j], reg[15][6])
link_out[15].range(143, 128) = TPG(link_in[15].range(141, 128), coeff[(15*10)+j], reg[15][7])
link_out[15].range(159, 144) = TPG(link_in[15].range(157, 144), coeff[(15*10)+j], reg[15][8])
link_out[15].range(175, 160) = TPG(link_in[15].range(173, 160), coeff[(15*10)+j], reg[15][9])
link_out[15].range(191, 176) = TPG(link_in[15].range(189, 176), coeff[(15*10)+j], reg[15][10])
link_out[16].range(15,0)=0
link_out[16].range(31, 16) = TPG(link_in[16].range(29, 16), coeff[(16*10)+j], reg[16][0])
link_out[16].range(47, 32) = TPG(link_in[16].range(45, 32), coeff[(16*10)+j], reg[16][1])
link_out[16].range(63, 48) = TPG(link_in[16].range(61, 48), coeff[(16*10)+j], reg[16][2])
link_out[16].range(79, 64) = TPG(link_in[16].range(77, 64), coeff[(16*10)+j], reg[16][3])
link_out[16].range(95, 80) = TPG(link_in[16].range(93, 80), coeff[(16*10)+j], reg[16][4])
link_out[16].range(111, 96) = TPG(link_in[16].range(109, 96), coeff[(16*10)+j], reg[16][5])
link_out[16].range(127, 112) = TPG(link_in[16].range(125, 112), coeff[(16*10)+j], reg[16][6])
link_out[16].range(143, 128) = TPG(link_in[16].range(141, 128), coeff[(16*10)+j], reg[16][7])
link_out[16].range(159, 144) = TPG(link_in[16].range(157, 144), coeff[(16*10)+j], reg[16][8])
link_out[16].range(175, 160) = TPG(link_in[16].range(173, 160), coeff[(16*10)+j], reg[16][9])
link_out[16].range(191, 176) = TPG(link_in[16].range(189, 176), coeff[(16*10)+j], reg[16][10])
link_out[17].range(15,0)=0
link_out[17].range(31, 16) = TPG(link_in[17].range(29, 16), coeff[(17*10)+j], reg[17][0])
link_out[17].range(47, 32) = TPG(link_in[17].range(45, 32), coeff[(17*10)+j], reg[17][1])
link_out[17].range(63, 48) = TPG(link_in[17].range(61, 48), coeff[(17*10)+j], reg[17][2])
link_out[17].range(79, 64) = TPG(link_in[17].range(77, 64), coeff[(17*10)+j], reg[17][3])
link_out[17].range(95, 80) = TPG(link_in[17].range(93, 80), coeff[(17*10)+j], reg[17][4])
link_out[17].range(111, 96) = TPG(link_in[17].range(109, 96), coeff[(17*10)+j], reg[17][5])
link_out[17].range(127, 112) = TPG(link_in[17].range(125, 112), coeff[(17*10)+j], reg[17][6])
link_out[17].range(143, 128) = TPG(link_in[17].range(141, 128), coeff[(17*10)+j], reg[17][7])
link_out[17].range(159, 144) = TPG(link_in[17].range(157, 144), coeff[(17*10)+j], reg[17][8])
link_out[17].range(175, 160) = TPG(link_in[17].range(173, 160), coeff[(17*10)+j], reg[17][9])
link_out[17].range(191, 176) = TPG(link_in[17].range(189, 176), coeff[(17*10)+j], reg[17][10])
link_out[18].range(15,0)=0
link_out[18].range(31, 16) = TPG(link_in[18].range(29, 16), coeff[(18*10)+j], reg[18][0])
link_out[18].range(47, 32) = TPG(link_in[18].range(45, 32), coeff[(18*10)+j], reg[18][1])
link_out[18].range(63, 48) = TPG(link_in[18].range(61, 48), coeff[(18*10)+j], reg[18][2])
link_out[18].range(79, 64) = TPG(link_in[18].range(77, 64), coeff[(18*10)+j], reg[18][3])
link_out[18].range(95, 80) = TPG(link_in[18].range(93, 80), coeff[(18*10)+j], reg[18][4])
link_out[18].range(111, 96) = TPG(link_in[18].range(109, 96), coeff[(18*10)+j], reg[18][5])
link_out[18].range(127, 112) = TPG(link_in[18].range(125, 112), coeff[(18*10)+j], reg[18][6])
link_out[18].range(143, 128) = TPG(link_in[18].range(141, 128), coeff[(18*10)+j], reg[18][7])
link_out[18].range(159, 144) = TPG(link_in[18].range(157, 144), coeff[(18*10)+j], reg[18][8])
link_out[18].range(175, 160) = TPG(link_in[18].range(173, 160), coeff[(18*10)+j], reg[18][9])
link_out[18].range(191, 176) = TPG(link_in[18].range(189, 176), coeff[(18*10)+j], reg[18][10])
link_out[19].range(15,0)=0
link_out[19].range(31, 16) = TPG(link_in[19].range(29, 16), coeff[(19*10)+j], reg[19][0])
link_out[19].range(47, 32) = TPG(link_in[19].range(45, 32), coeff[(19*10)+j], reg[19][1])
link_out[19].range(63, 48) = TPG(link_in[19].range(61, 48), coeff[(19*10)+j], reg[19][2])
link_out[19].range(79, 64) = TPG(link_in[19].range(77, 64), coeff[(19*10)+j], reg[19][3])
link_out[19].range(95, 80) = TPG(link_in[19].range(93, 80), coeff[(19*10)+j], reg[19][4])
link_out[19].range(111, 96) = TPG(link_in[19].range(109, 96), coeff[(19*10)+j], reg[19][5])
link_out[19].range(127, 112) = TPG(link_in[19].range(125, 112), coeff[(19*10)+j], reg[19][6])
link_out[19].range(143, 128) = TPG(link_in[19].range(141, 128), coeff[(19*10)+j], reg[19][7])
link_out[19].range(159, 144) = TPG(link_in[19].range(157, 144), coeff[(19*10)+j], reg[19][8])
link_out[19].range(175, 160) = TPG(link_in[19].range(173, 160), coeff[(19*10)+j], reg[19][9])
link_out[19].range(191, 176) = TPG(link_in[19].range(189, 176), coeff[(19*10)+j], reg[19][10])
link_out[20].range(15,0)=0
link_out[20].range(31, 16) = TPG(link_in[20].range(29, 16), coeff[(20*10)+j], reg[20][0])
link_out[20].range(47, 32) = TPG(link_in[20].range(45, 32), coeff[(20*10)+j], reg[20][1])
link_out[20].range(63, 48) = TPG(link_in[20].range(61, 48), coeff[(20*10)+j], reg[20][2])
link_out[20].range(79, 64) = TPG(link_in[20].range(77, 64), coeff[(20*10)+j], reg[20][3])
link_out[20].range(95, 80) = TPG(link_in[20].range(93, 80), coeff[(20*10)+j], reg[20][4])
link_out[20].range(111, 96) = TPG(link_in[20].range(109, 96), coeff[(20*10)+j], reg[20][5])
link_out[20].range(127, 112) = TPG(link_in[20].range(125, 112), coeff[(20*10)+j], reg[20][6])
link_out[20].range(143, 128) = TPG(link_in[20].range(141, 128), coeff[(20*10)+j], reg[20][7])
link_out[20].range(159, 144) = TPG(link_in[20].range(157, 144), coeff[(20*10)+j], reg[20][8])
link_out[20].range(175, 160) = TPG(link_in[20].range(173, 160), coeff[(20*10)+j], reg[20][9])
link_out[20].range(191, 176) = TPG(link_in[20].range(189, 176), coeff[(20*10)+j], reg[20][10])
link_out[21].range(15,0)=0
link_out[21].range(31, 16) = TPG(link_in[21].range(29, 16), coeff[(21*10)+j], reg[21][0])
link_out[21].range(47, 32) = TPG(link_in[21].range(45, 32), coeff[(21*10)+j], reg[21][1])
link_out[21].range(63, 48) = TPG(link_in[21].range(61, 48), coeff[(21*10)+j], reg[21][2])
link_out[21].range(79, 64) = TPG(link_in[21].range(77, 64), coeff[(21*10)+j], reg[21][3])
link_out[21].range(95, 80) = TPG(link_in[21].range(93, 80), coeff[(21*10)+j], reg[21][4])
link_out[21].range(111, 96) = TPG(link_in[21].range(109, 96), coeff[(21*10)+j], reg[21][5])
link_out[21].range(127, 112) = TPG(link_in[21].range(125, 112), coeff[(21*10)+j], reg[21][6])
link_out[21].range(143, 128) = TPG(link_in[21].range(141, 128), coeff[(21*10)+j], reg[21][7])
link_out[21].range(159, 144) = TPG(link_in[21].range(157, 144), coeff[(21*10)+j], reg[21][8])
link_out[21].range(175, 160) = TPG(link_in[21].range(173, 160), coeff[(21*10)+j], reg[21][9])
link_out[21].range(191, 176) = TPG(link_in[21].range(189, 176), coeff[(21*10)+j], reg[21][10])
link_out[22].range(15,0)=0
link_out[22].range(31, 16) = TPG(link_in[22].range(29, 16), coeff[(22*10)+j], reg[22][0])
link_out[22].range(47, 32) = TPG(link_in[22].range(45, 32), coeff[(22*10)+j], reg[22][1])
link_out[22].range(63, 48) = TPG(link_in[22].range(61, 48), coeff[(22*10)+j], reg[22][2])
link_out[22].range(79, 64) = TPG(link_in[22].range(77, 64), coeff[(22*10)+j], reg[22][3])
link_out[22].range(95, 80) = TPG(link_in[22].range(93, 80), coeff[(22*10)+j], reg[22][4])
link_out[22].range(111, 96) = TPG(link_in[22].range(109, 96), coeff[(22*10)+j], reg[22][5])
link_out[22].range(127, 112) = TPG(link_in[22].range(125, 112), coeff[(22*10)+j], reg[22][6])
link_out[22].range(143, 128) = TPG(link_in[22].range(141, 128), coeff[(22*10)+j], reg[22][7])
link_out[22].range(159, 144) = TPG(link_in[22].range(157, 144), coeff[(22*10)+j], reg[22][8])
link_out[22].range(175, 160) = TPG(link_in[22].range(173, 160), coeff[(22*10)+j], reg[22][9])
link_out[22].range(191, 176) = TPG(link_in[22].range(189, 176), coeff[(22*10)+j], reg[22][10])
link_out[23].range(15,0)=0
link_out[23].range(31, 16) = TPG(link_in[23].range(29, 16), coeff[(23*10)+j], reg[23][0])
link_out[23].range(47, 32) = TPG(link_in[23].range(45, 32), coeff[(23*10)+j], reg[23][1])
link_out[23].range(63, 48) = TPG(link_in[23].range(61, 48), coeff[(23*10)+j], reg[23][2])
link_out[23].range(79, 64) = TPG(link_in[23].range(77, 64), coeff[(23*10)+j], reg[23][3])
link_out[23].range(95, 80) = TPG(link_in[23].range(93, 80), coeff[(23*10)+j], reg[23][4])
link_out[23].range(111, 96) = TPG(link_in[23].range(109, 96), coeff[(23*10)+j], reg[23][5])
link_out[23].range(127, 112) = TPG(link_in[23].range(125, 112), coeff[(23*10)+j], reg[23][6])
link_out[23].range(143, 128) = TPG(link_in[23].range(141, 128), coeff[(23*10)+j], reg[23][7])
link_out[23].range(159, 144) = TPG(link_in[23].range(157, 144), coeff[(23*10)+j], reg[23][8])
link_out[23].range(175, 160) = TPG(link_in[23].range(173, 160), coeff[(23*10)+j], reg[23][9])
link_out[23].range(191, 176) = TPG(link_in[23].range(189, 176), coeff[(23*10)+j], reg[23][10])
link_out[24].range(15,0)=0
link_out[24].range(31, 16) = TPG(link_in[24].range(29, 16), coeff[(24*10)+j], reg[24][0])
link_out[24].range(47, 32) = TPG(link_in[24].range(45, 32), coeff[(24*10)+j], reg[24][1])
link_out[24].range(63, 48) = TPG(link_in[24].range(61, 48), coeff[(24*10)+j], reg[24][2])
link_out[24].range(79, 64) = TPG(link_in[24].range(77, 64), coeff[(24*10)+j], reg[24][3])
link_out[24].range(95, 80) = TPG(link_in[24].range(93, 80), coeff[(24*10)+j], reg[24][4])
link_out[24].range(111, 96) = TPG(link_in[24].range(109, 96), coeff[(24*10)+j], reg[24][5])
link_out[24].range(127, 112) = TPG(link_in[24].range(125, 112), coeff[(24*10)+j], reg[24][6])
link_out[24].range(143, 128) = TPG(link_in[24].range(141, 128), coeff[(24*10)+j], reg[24][7])
link_out[24].range(159, 144) = TPG(link_in[24].range(157, 144), coeff[(24*10)+j], reg[24][8])
link_out[24].range(175, 160) = TPG(link_in[24].range(173, 160), coeff[(24*10)+j], reg[24][9])
link_out[24].range(191, 176) = TPG(link_in[24].range(189, 176), coeff[(24*10)+j], reg[24][10])
link_out[25].range(15,0)=0
link_out[25].range(31, 16) = TPG(link_in[25].range(29, 16), coeff[(25*10)+j], reg[25][0])
link_out[25].range(47, 32) = TPG(link_in[25].range(45, 32), coeff[(25*10)+j], reg[25][1])
link_out[25].range(63, 48) = TPG(link_in[25].range(61, 48), coeff[(25*10)+j], reg[25][2])
link_out[25].range(79, 64) = TPG(link_in[25].range(77, 64), coeff[(25*10)+j], reg[25][3])
link_out[25].range(95, 80) = TPG(link_in[25].range(93, 80), coeff[(25*10)+j], reg[25][4])
link_out[25].range(111, 96) = TPG(link_in[25].range(109, 96), coeff[(25*10)+j], reg[25][5])
link_out[25].range(127, 112) = TPG(link_in[25].range(125, 112), coeff[(25*10)+j], reg[25][6])
link_out[25].range(143, 128) = TPG(link_in[25].range(141, 128), coeff[(25*10)+j], reg[25][7])
link_out[25].range(159, 144) = TPG(link_in[25].range(157, 144), coeff[(25*10)+j], reg[25][8])
link_out[25].range(175, 160) = TPG(link_in[25].range(173, 160), coeff[(25*10)+j], reg[25][9])
link_out[25].range(191, 176) = TPG(link_in[25].range(189, 176), coeff[(25*10)+j], reg[25][10])
link_out[26].range(15,0)=0
link_out[26].range(31, 16) = TPG(link_in[26].range(29, 16), coeff[(26*10)+j], reg[26][0])
link_out[26].range(47, 32) = TPG(link_in[26].range(45, 32), coeff[(26*10)+j], reg[26][1])
link_out[26].range(63, 48) = TPG(link_in[26].range(61, 48), coeff[(26*10)+j], reg[26][2])
link_out[26].range(79, 64) = TPG(link_in[26].range(77, 64), coeff[(26*10)+j], reg[26][3])
link_out[26].range(95, 80) = TPG(link_in[26].range(93, 80), coeff[(26*10)+j], reg[26][4])
link_out[26].range(111, 96) = TPG(link_in[26].range(109, 96), coeff[(26*10)+j], reg[26][5])
link_out[26].range(127, 112) = TPG(link_in[26].range(125, 112), coeff[(26*10)+j], reg[26][6])
link_out[26].range(143, 128) = TPG(link_in[26].range(141, 128), coeff[(26*10)+j], reg[26][7])
link_out[26].range(159, 144) = TPG(link_in[26].range(157, 144), coeff[(26*10)+j], reg[26][8])
link_out[26].range(175, 160) = TPG(link_in[26].range(173, 160), coeff[(26*10)+j], reg[26][9])
link_out[26].range(191, 176) = TPG(link_in[26].range(189, 176), coeff[(26*10)+j], reg[26][10])
link_out[27].range(15,0)=0
link_out[27].range(31, 16) = TPG(link_in[27].range(29, 16), coeff[(27*10)+j], reg[27][0])
link_out[27].range(47, 32) = TPG(link_in[27].range(45, 32), coeff[(27*10)+j], reg[27][1])
link_out[27].range(63, 48) = TPG(link_in[27].range(61, 48), coeff[(27*10)+j], reg[27][2])
link_out[27].range(79, 64) = TPG(link_in[27].range(77, 64), coeff[(27*10)+j], reg[27][3])
link_out[27].range(95, 80) = TPG(link_in[27].range(93, 80), coeff[(27*10)+j], reg[27][4])
link_out[27].range(111, 96) = TPG(link_in[27].range(109, 96), coeff[(27*10)+j], reg[27][5])
link_out[27].range(127, 112) = TPG(link_in[27].range(125, 112), coeff[(27*10)+j], reg[27][6])
link_out[27].range(143, 128) = TPG(link_in[27].range(141, 128), coeff[(27*10)+j], reg[27][7])
link_out[27].range(159, 144) = TPG(link_in[27].range(157, 144), coeff[(27*10)+j], reg[27][8])
link_out[27].range(175, 160) = TPG(link_in[27].range(173, 160), coeff[(27*10)+j], reg[27][9])
link_out[27].range(191, 176) = TPG(link_in[27].range(189, 176), coeff[(27*10)+j], reg[27][10])
link_out[28].range(15,0)=0
link_out[28].range(31, 16) = TPG(link_in[28].range(29, 16), coeff[(28*10)+j], reg[28][0])
link_out[28].range(47, 32) = TPG(link_in[28].range(45, 32), coeff[(28*10)+j], reg[28][1])
link_out[28].range(63, 48) = TPG(link_in[28].range(61, 48), coeff[(28*10)+j], reg[28][2])
link_out[28].range(79, 64) = TPG(link_in[28].range(77, 64), coeff[(28*10)+j], reg[28][3])
link_out[28].range(95, 80) = TPG(link_in[28].range(93, 80), coeff[(28*10)+j], reg[28][4])
link_out[28].range(111, 96) = TPG(link_in[28].range(109, 96), coeff[(28*10)+j], reg[28][5])
link_out[28].range(127, 112) = TPG(link_in[28].range(125, 112), coeff[(28*10)+j], reg[28][6])
link_out[28].range(143, 128) = TPG(link_in[28].range(141, 128), coeff[(28*10)+j], reg[28][7])
link_out[28].range(159, 144) = TPG(link_in[28].range(157, 144), coeff[(28*10)+j], reg[28][8])
link_out[28].range(175, 160) = TPG(link_in[28].range(173, 160), coeff[(28*10)+j], reg[28][9])
link_out[28].range(191, 176) = TPG(link_in[28].range(189, 176), coeff[(28*10)+j], reg[28][10])
link_out[29].range(15,0)=0
link_out[29].range(31, 16) = TPG(link_in[29].range(29, 16), coeff[(29*10)+j], reg[29][0])
link_out[29].range(47, 32) = TPG(link_in[29].range(45, 32), coeff[(29*10)+j], reg[29][1])
link_out[29].range(63, 48) = TPG(link_in[29].range(61, 48), coeff[(29*10)+j], reg[29][2])
link_out[29].range(79, 64) = TPG(link_in[29].range(77, 64), coeff[(29*10)+j], reg[29][3])
link_out[29].range(95, 80) = TPG(link_in[29].range(93, 80), coeff[(29*10)+j], reg[29][4])
link_out[29].range(111, 96) = TPG(link_in[29].range(109, 96), coeff[(29*10)+j], reg[29][5])
link_out[29].range(127, 112) = TPG(link_in[29].range(125, 112), coeff[(29*10)+j], reg[29][6])
link_out[29].range(143, 128) = TPG(link_in[29].range(141, 128), coeff[(29*10)+j], reg[29][7])
link_out[29].range(159, 144) = TPG(link_in[29].range(157, 144), coeff[(29*10)+j], reg[29][8])
link_out[29].range(175, 160) = TPG(link_in[29].range(173, 160), coeff[(29*10)+j], reg[29][9])
link_out[29].range(191, 176) = TPG(link_in[29].range(189, 176), coeff[(29*10)+j], reg[29][10])
link_out[30].range(15,0)=0
link_out[30].range(31, 16) = TPG(link_in[30].range(29, 16), coeff[(30*10)+j], reg[30][0])
link_out[30].range(47, 32) = TPG(link_in[30].range(45, 32), coeff[(30*10)+j], reg[30][1])
link_out[30].range(63, 48) = TPG(link_in[30].range(61, 48), coeff[(30*10)+j], reg[30][2])
link_out[30].range(79, 64) = TPG(link_in[30].range(77, 64), coeff[(30*10)+j], reg[30][3])
link_out[30].range(95, 80) = TPG(link_in[30].range(93, 80), coeff[(30*10)+j], reg[30][4])
link_out[30].range(111, 96) = TPG(link_in[30].range(109, 96), coeff[(30*10)+j], reg[30][5])
link_out[30].range(127, 112) = TPG(link_in[30].range(125, 112), coeff[(30*10)+j], reg[30][6])
link_out[30].range(143, 128) = TPG(link_in[30].range(141, 128), coeff[(30*10)+j], reg[30][7])
link_out[30].range(159, 144) = TPG(link_in[30].range(157, 144), coeff[(30*10)+j], reg[30][8])
link_out[30].range(175, 160) = TPG(link_in[30].range(173, 160), coeff[(30*10)+j], reg[30][9])
link_out[30].range(191, 176) = TPG(link_in[30].range(189, 176), coeff[(30*10)+j], reg[30][10])
link_out[31].range(15,0)=0
link_out[31].range(31, 16) = TPG(link_in[31].range(29, 16), coeff[(31*10)+j], reg[31][0])
link_out[31].range(47, 32) = TPG(link_in[31].range(45, 32), coeff[(31*10)+j], reg[31][1])
link_out[31].range(63, 48) = TPG(link_in[31].range(61, 48), coeff[(31*10)+j], reg[31][2])
link_out[31].range(79, 64) = TPG(link_in[31].range(77, 64), coeff[(31*10)+j], reg[31][3])
link_out[31].range(95, 80) = TPG(link_in[31].range(93, 80), coeff[(31*10)+j], reg[31][4])
link_out[31].range(111, 96) = TPG(link_in[31].range(109, 96), coeff[(31*10)+j], reg[31][5])
link_out[31].range(127, 112) = TPG(link_in[31].range(125, 112), coeff[(31*10)+j], reg[31][6])
link_out[31].range(143, 128) = TPG(link_in[31].range(141, 128), coeff[(31*10)+j], reg[31][7])
link_out[31].range(159, 144) = TPG(link_in[31].range(157, 144), coeff[(31*10)+j], reg[31][8])
link_out[31].range(175, 160) = TPG(link_in[31].range(173, 160), coeff[(31*10)+j], reg[31][9])
link_out[31].range(191, 176) = TPG(link_in[31].range(189, 176), coeff[(31*10)+j], reg[31][10])
link_out[32].range(15,0)=0
link_out[32].range(31, 16) = TPG(link_in[32].range(29, 16), coeff[(32*10)+j], reg[32][0])
link_out[32].range(47, 32) = TPG(link_in[32].range(45, 32), coeff[(32*10)+j], reg[32][1])
link_out[32].range(63, 48) = TPG(link_in[32].range(61, 48), coeff[(32*10)+j], reg[32][2])
link_out[32].range(79, 64) = TPG(link_in[32].range(77, 64), coeff[(32*10)+j], reg[32][3])
link_out[32].range(95, 80) = TPG(link_in[32].range(93, 80), coeff[(32*10)+j], reg[32][4])
link_out[32].range(111, 96) = TPG(link_in[32].range(109, 96), coeff[(32*10)+j], reg[32][5])
link_out[32].range(127, 112) = TPG(link_in[32].range(125, 112), coeff[(32*10)+j], reg[32][6])
link_out[32].range(143, 128) = TPG(link_in[32].range(141, 128), coeff[(32*10)+j], reg[32][7])
link_out[32].range(159, 144) = TPG(link_in[32].range(157, 144), coeff[(32*10)+j], reg[32][8])
link_out[32].range(175, 160) = TPG(link_in[32].range(173, 160), coeff[(32*10)+j], reg[32][9])
link_out[32].range(191, 176) = TPG(link_in[32].range(189, 176), coeff[(32*10)+j], reg[32][10])
link_out[33].range(15,0)=0
link_out[33].range(31, 16) = TPG(link_in[33].range(29, 16), coeff[(33*10)+j], reg[33][0])
link_out[33].range(47, 32) = TPG(link_in[33].range(45, 32), coeff[(33*10)+j], reg[33][1])
link_out[33].range(63, 48) = TPG(link_in[33].range(61, 48), coeff[(33*10)+j], reg[33][2])
link_out[33].range(79, 64) = TPG(link_in[33].range(77, 64), coeff[(33*10)+j], reg[33][3])
link_out[33].range(95, 80) = TPG(link_in[33].range(93, 80), coeff[(33*10)+j], reg[33][4])
link_out[33].range(111, 96) = TPG(link_in[33].range(109, 96), coeff[(33*10)+j], reg[33][5])
link_out[33].range(127, 112) = TPG(link_in[33].range(125, 112), coeff[(33*10)+j], reg[33][6])
link_out[33].range(143, 128) = TPG(link_in[33].range(141, 128), coeff[(33*10)+j], reg[33][7])
link_out[33].range(159, 144) = TPG(link_in[33].range(157, 144), coeff[(33*10)+j], reg[33][8])
link_out[33].range(175, 160) = TPG(link_in[33].range(173, 160), coeff[(33*10)+j], reg[33][9])
link_out[33].range(191, 176) = TPG(link_in[33].range(189, 176), coeff[(33*10)+j], reg[33][10])
link_out[34].range(15,0)=0
link_out[34].range(31, 16) = TPG(link_in[34].range(29, 16), coeff[(34*10)+j], reg[34][0])
link_out[34].range(47, 32) = TPG(link_in[34].range(45, 32), coeff[(34*10)+j], reg[34][1])
link_out[34].range(63, 48) = TPG(link_in[34].range(61, 48), coeff[(34*10)+j], reg[34][2])
link_out[34].range(79, 64) = TPG(link_in[34].range(77, 64), coeff[(34*10)+j], reg[34][3])
link_out[34].range(95, 80) = TPG(link_in[34].range(93, 80), coeff[(34*10)+j], reg[34][4])
link_out[34].range(111, 96) = TPG(link_in[34].range(109, 96), coeff[(34*10)+j], reg[34][5])
link_out[34].range(127, 112) = TPG(link_in[34].range(125, 112), coeff[(34*10)+j], reg[34][6])
link_out[34].range(143, 128) = TPG(link_in[34].range(141, 128), coeff[(34*10)+j], reg[34][7])
link_out[34].range(159, 144) = TPG(link_in[34].range(157, 144), coeff[(34*10)+j], reg[34][8])
link_out[34].range(175, 160) = TPG(link_in[34].range(173, 160), coeff[(34*10)+j], reg[34][9])
link_out[34].range(191, 176) = TPG(link_in[34].range(189, 176), coeff[(34*10)+j], reg[34][10])
link_out[35].range(15,0)=0
link_out[35].range(31, 16) = TPG(link_in[35].range(29, 16), coeff[(35*10)+j], reg[35][0])
link_out[35].range(47, 32) = TPG(link_in[35].range(45, 32), coeff[(35*10)+j], reg[35][1])
link_out[35].range(63, 48) = TPG(link_in[35].range(61, 48), coeff[(35*10)+j], reg[35][2])
link_out[35].range(79, 64) = TPG(link_in[35].range(77, 64), coeff[(35*10)+j], reg[35][3])
link_out[35].range(95, 80) = TPG(link_in[35].range(93, 80), coeff[(35*10)+j], reg[35][4])
link_out[35].range(111, 96) = TPG(link_in[35].range(109, 96), coeff[(35*10)+j], reg[35][5])
link_out[35].range(127, 112) = TPG(link_in[35].range(125, 112), coeff[(35*10)+j], reg[35][6])
link_out[35].range(143, 128) = TPG(link_in[35].range(141, 128), coeff[(35*10)+j], reg[35][7])
link_out[35].range(159, 144) = TPG(link_in[35].range(157, 144), coeff[(35*10)+j], reg[35][8])
link_out[35].range(175, 160) = TPG(link_in[35].range(173, 160), coeff[(35*10)+j], reg[35][9])
link_out[35].range(191, 176) = TPG(link_in[35].range(189, 176), coeff[(35*10)+j], reg[35][10])
link_out[36].range(15,0)=0
link_out[36].range(31, 16) = TPG(link_in[36].range(29, 16), coeff[(36*10)+j], reg[36][0])
link_out[36].range(47, 32) = TPG(link_in[36].range(45, 32), coeff[(36*10)+j], reg[36][1])
link_out[36].range(63, 48) = TPG(link_in[36].range(61, 48), coeff[(36*10)+j], reg[36][2])
link_out[36].range(79, 64) = TPG(link_in[36].range(77, 64), coeff[(36*10)+j], reg[36][3])
link_out[36].range(95, 80) = TPG(link_in[36].range(93, 80), coeff[(36*10)+j], reg[36][4])
link_out[36].range(111, 96) = TPG(link_in[36].range(109, 96), coeff[(36*10)+j], reg[36][5])
link_out[36].range(127, 112) = TPG(link_in[36].range(125, 112), coeff[(36*10)+j], reg[36][6])
link_out[36].range(143, 128) = TPG(link_in[36].range(141, 128), coeff[(36*10)+j], reg[36][7])
link_out[36].range(159, 144) = TPG(link_in[36].range(157, 144), coeff[(36*10)+j], reg[36][8])
link_out[36].range(175, 160) = TPG(link_in[36].range(173, 160), coeff[(36*10)+j], reg[36][9])
link_out[36].range(191, 176) = TPG(link_in[36].range(189, 176), coeff[(36*10)+j], reg[36][10])
link_out[37].range(15,0)=0
link_out[37].range(31, 16) = TPG(link_in[37].range(29, 16), coeff[(37*10)+j], reg[37][0])
link_out[37].range(47, 32) = TPG(link_in[37].range(45, 32), coeff[(37*10)+j], reg[37][1])
link_out[37].range(63, 48) = TPG(link_in[37].range(61, 48), coeff[(37*10)+j], reg[37][2])
link_out[37].range(79, 64) = TPG(link_in[37].range(77, 64), coeff[(37*10)+j], reg[37][3])
link_out[37].range(95, 80) = TPG(link_in[37].range(93, 80), coeff[(37*10)+j], reg[37][4])
link_out[37].range(111, 96) = TPG(link_in[37].range(109, 96), coeff[(37*10)+j], reg[37][5])
link_out[37].range(127, 112) = TPG(link_in[37].range(125, 112), coeff[(37*10)+j], reg[37][6])
link_out[37].range(143, 128) = TPG(link_in[37].range(141, 128), coeff[(37*10)+j], reg[37][7])
link_out[37].range(159, 144) = TPG(link_in[37].range(157, 144), coeff[(37*10)+j], reg[37][8])
link_out[37].range(175, 160) = TPG(link_in[37].range(173, 160), coeff[(37*10)+j], reg[37][9])
link_out[37].range(191, 176) = TPG(link_in[37].range(189, 176), coeff[(37*10)+j], reg[37][10])
link_out[38].range(15,0)=0
link_out[38].range(31, 16) = TPG(link_in[38].range(29, 16), coeff[(38*10)+j], reg[38][0])
link_out[38].range(47, 32) = TPG(link_in[38].range(45, 32), coeff[(38*10)+j], reg[38][1])
link_out[38].range(63, 48) = TPG(link_in[38].range(61, 48), coeff[(38*10)+j], reg[38][2])
link_out[38].range(79, 64) = TPG(link_in[38].range(77, 64), coeff[(38*10)+j], reg[38][3])
link_out[38].range(95, 80) = TPG(link_in[38].range(93, 80), coeff[(38*10)+j], reg[38][4])
link_out[38].range(111, 96) = TPG(link_in[38].range(109, 96), coeff[(38*10)+j], reg[38][5])
link_out[38].range(127, 112) = TPG(link_in[38].range(125, 112), coeff[(38*10)+j], reg[38][6])
link_out[38].range(143, 128) = TPG(link_in[38].range(141, 128), coeff[(38*10)+j], reg[38][7])
link_out[38].range(159, 144) = TPG(link_in[38].range(157, 144), coeff[(38*10)+j], reg[38][8])
link_out[38].range(175, 160) = TPG(link_in[38].range(173, 160), coeff[(38*10)+j], reg[38][9])
link_out[38].range(191, 176) = TPG(link_in[38].range(189, 176), coeff[(38*10)+j], reg[38][10])
link_out[39].range(15,0)=0
link_out[39].range(31, 16) = TPG(link_in[39].range(29, 16), coeff[(39*10)+j], reg[39][0])
link_out[39].range(47, 32) = TPG(link_in[39].range(45, 32), coeff[(39*10)+j], reg[39][1])
link_out[39].range(63, 48) = TPG(link_in[39].range(61, 48), coeff[(39*10)+j], reg[39][2])
link_out[39].range(79, 64) = TPG(link_in[39].range(77, 64), coeff[(39*10)+j], reg[39][3])
link_out[39].range(95, 80) = TPG(link_in[39].range(93, 80), coeff[(39*10)+j], reg[39][4])
link_out[39].range(111, 96) = TPG(link_in[39].range(109, 96), coeff[(39*10)+j], reg[39][5])
link_out[39].range(127, 112) = TPG(link_in[39].range(125, 112), coeff[(39*10)+j], reg[39][6])
link_out[39].range(143, 128) = TPG(link_in[39].range(141, 128), coeff[(39*10)+j], reg[39][7])
link_out[39].range(159, 144) = TPG(link_in[39].range(157, 144), coeff[(39*10)+j], reg[39][8])
link_out[39].range(175, 160) = TPG(link_in[39].range(173, 160), coeff[(39*10)+j], reg[39][9])
link_out[39].range(191, 176) = TPG(link_in[39].range(189, 176), coeff[(39*10)+j], reg[39][10])
link_out[40].range(15,0)=0
link_out[40].range(31, 16) = TPG(link_in[40].range(29, 16), coeff[(40*10)+j], reg[40][0])
link_out[40].range(47, 32) = TPG(link_in[40].range(45, 32), coeff[(40*10)+j], reg[40][1])
link_out[40].range(63, 48) = TPG(link_in[40].range(61, 48), coeff[(40*10)+j], reg[40][2])
link_out[40].range(79, 64) = TPG(link_in[40].range(77, 64), coeff[(40*10)+j], reg[40][3])
link_out[40].range(95, 80) = TPG(link_in[40].range(93, 80), coeff[(40*10)+j], reg[40][4])
link_out[40].range(111, 96) = TPG(link_in[40].range(109, 96), coeff[(40*10)+j], reg[40][5])
link_out[40].range(127, 112) = TPG(link_in[40].range(125, 112), coeff[(40*10)+j], reg[40][6])
link_out[40].range(143, 128) = TPG(link_in[40].range(141, 128), coeff[(40*10)+j], reg[40][7])
link_out[40].range(159, 144) = TPG(link_in[40].range(157, 144), coeff[(40*10)+j], reg[40][8])
link_out[40].range(175, 160) = TPG(link_in[40].range(173, 160), coeff[(40*10)+j], reg[40][9])
link_out[40].range(191, 176) = TPG(link_in[40].range(189, 176), coeff[(40*10)+j], reg[40][10])
link_out[41].range(15,0)=0
link_out[41].range(31, 16) = TPG(link_in[41].range(29, 16), coeff[(41*10)+j], reg[41][0])
link_out[41].range(47, 32) = TPG(link_in[41].range(45, 32), coeff[(41*10)+j], reg[41][1])
link_out[41].range(63, 48) = TPG(link_in[41].range(61, 48), coeff[(41*10)+j], reg[41][2])
link_out[41].range(79, 64) = TPG(link_in[41].range(77, 64), coeff[(41*10)+j], reg[41][3])
link_out[41].range(95, 80) = TPG(link_in[41].range(93, 80), coeff[(41*10)+j], reg[41][4])
link_out[41].range(111, 96) = TPG(link_in[41].range(109, 96), coeff[(41*10)+j], reg[41][5])
link_out[41].range(127, 112) = TPG(link_in[41].range(125, 112), coeff[(41*10)+j], reg[41][6])
link_out[41].range(143, 128) = TPG(link_in[41].range(141, 128), coeff[(41*10)+j], reg[41][7])
link_out[41].range(159, 144) = TPG(link_in[41].range(157, 144), coeff[(41*10)+j], reg[41][8])
link_out[41].range(175, 160) = TPG(link_in[41].range(173, 160), coeff[(41*10)+j], reg[41][9])
link_out[41].range(191, 176) = TPG(link_in[41].range(189, 176), coeff[(41*10)+j], reg[41][10])
link_out[42].range(15,0)=0
link_out[42].range(31, 16) = TPG(link_in[42].range(29, 16), coeff[(42*10)+j], reg[42][0])
link_out[42].range(47, 32) = TPG(link_in[42].range(45, 32), coeff[(42*10)+j], reg[42][1])
link_out[42].range(63, 48) = TPG(link_in[42].range(61, 48), coeff[(42*10)+j], reg[42][2])
link_out[42].range(79, 64) = TPG(link_in[42].range(77, 64), coeff[(42*10)+j], reg[42][3])
link_out[42].range(95, 80) = TPG(link_in[42].range(93, 80), coeff[(42*10)+j], reg[42][4])
link_out[42].range(111, 96) = TPG(link_in[42].range(109, 96), coeff[(42*10)+j], reg[42][5])
link_out[42].range(127, 112) = TPG(link_in[42].range(125, 112), coeff[(42*10)+j], reg[42][6])
link_out[42].range(143, 128) = TPG(link_in[42].range(141, 128), coeff[(42*10)+j], reg[42][7])
link_out[42].range(159, 144) = TPG(link_in[42].range(157, 144), coeff[(42*10)+j], reg[42][8])
link_out[42].range(175, 160) = TPG(link_in[42].range(173, 160), coeff[(42*10)+j], reg[42][9])
link_out[42].range(191, 176) = TPG(link_in[42].range(189, 176), coeff[(42*10)+j], reg[42][10])
link_out[43].range(15,0)=0
link_out[43].range(31, 16) = TPG(link_in[43].range(29, 16), coeff[(43*10)+j], reg[43][0])
link_out[43].range(47, 32) = TPG(link_in[43].range(45, 32), coeff[(43*10)+j], reg[43][1])
link_out[43].range(63, 48) = TPG(link_in[43].range(61, 48), coeff[(43*10)+j], reg[43][2])
link_out[43].range(79, 64) = TPG(link_in[43].range(77, 64), coeff[(43*10)+j], reg[43][3])
link_out[43].range(95, 80) = TPG(link_in[43].range(93, 80), coeff[(43*10)+j], reg[43][4])
link_out[43].range(111, 96) = TPG(link_in[43].range(109, 96), coeff[(43*10)+j], reg[43][5])
link_out[43].range(127, 112) = TPG(link_in[43].range(125, 112), coeff[(43*10)+j], reg[43][6])
link_out[43].range(143, 128) = TPG(link_in[43].range(141, 128), coeff[(43*10)+j], reg[43][7])
link_out[43].range(159, 144) = TPG(link_in[43].range(157, 144), coeff[(43*10)+j], reg[43][8])
link_out[43].range(175, 160) = TPG(link_in[43].range(173, 160), coeff[(43*10)+j], reg[43][9])
link_out[43].range(191, 176) = TPG(link_in[43].range(189, 176), coeff[(43*10)+j], reg[43][10])
link_out[44].range(15,0)=0
link_out[44].range(31, 16) = TPG(link_in[44].range(29, 16), coeff[(44*10)+j], reg[44][0])
link_out[44].range(47, 32) = TPG(link_in[44].range(45, 32), coeff[(44*10)+j], reg[44][1])
link_out[44].range(63, 48) = TPG(link_in[44].range(61, 48), coeff[(44*10)+j], reg[44][2])
link_out[44].range(79, 64) = TPG(link_in[44].range(77, 64), coeff[(44*10)+j], reg[44][3])
link_out[44].range(95, 80) = TPG(link_in[44].range(93, 80), coeff[(44*10)+j], reg[44][4])
link_out[44].range(111, 96) = TPG(link_in[44].range(109, 96), coeff[(44*10)+j], reg[44][5])
link_out[44].range(127, 112) = TPG(link_in[44].range(125, 112), coeff[(44*10)+j], reg[44][6])
link_out[44].range(143, 128) = TPG(link_in[44].range(141, 128), coeff[(44*10)+j], reg[44][7])
link_out[44].range(159, 144) = TPG(link_in[44].range(157, 144), coeff[(44*10)+j], reg[44][8])
link_out[44].range(175, 160) = TPG(link_in[44].range(173, 160), coeff[(44*10)+j], reg[44][9])
link_out[44].range(191, 176) = TPG(link_in[44].range(189, 176), coeff[(44*10)+j], reg[44][10])
link_out[45].range(15,0)=0
link_out[45].range(31, 16) = TPG(link_in[45].range(29, 16), coeff[(45*10)+j], reg[45][0])
link_out[45].range(47, 32) = TPG(link_in[45].range(45, 32), coeff[(45*10)+j], reg[45][1])
link_out[45].range(63, 48) = TPG(link_in[45].range(61, 48), coeff[(45*10)+j], reg[45][2])
link_out[45].range(79, 64) = TPG(link_in[45].range(77, 64), coeff[(45*10)+j], reg[45][3])
link_out[45].range(95, 80) = TPG(link_in[45].range(93, 80), coeff[(45*10)+j], reg[45][4])
link_out[45].range(111, 96) = TPG(link_in[45].range(109, 96), coeff[(45*10)+j], reg[45][5])
link_out[45].range(127, 112) = TPG(link_in[45].range(125, 112), coeff[(45*10)+j], reg[45][6])
link_out[45].range(143, 128) = TPG(link_in[45].range(141, 128), coeff[(45*10)+j], reg[45][7])
link_out[45].range(159, 144) = TPG(link_in[45].range(157, 144), coeff[(45*10)+j], reg[45][8])
link_out[45].range(175, 160) = TPG(link_in[45].range(173, 160), coeff[(45*10)+j], reg[45][9])
link_out[45].range(191, 176) = TPG(link_in[45].range(189, 176), coeff[(45*10)+j], reg[45][10])
link_out[46].range(15,0)=0
link_out[46].range(31, 16) = TPG(link_in[46].range(29, 16), coeff[(46*10)+j], reg[46][0])
link_out[46].range(47, 32) = TPG(link_in[46].range(45, 32), coeff[(46*10)+j], reg[46][1])
link_out[46].range(63, 48) = TPG(link_in[46].range(61, 48), coeff[(46*10)+j], reg[46][2])
link_out[46].range(79, 64) = TPG(link_in[46].range(77, 64), coeff[(46*10)+j], reg[46][3])
link_out[46].range(95, 80) = TPG(link_in[46].range(93, 80), coeff[(46*10)+j], reg[46][4])
link_out[46].range(111, 96) = TPG(link_in[46].range(109, 96), coeff[(46*10)+j], reg[46][5])
link_out[46].range(127, 112) = TPG(link_in[46].range(125, 112), coeff[(46*10)+j], reg[46][6])
link_out[46].range(143, 128) = TPG(link_in[46].range(141, 128), coeff[(46*10)+j], reg[46][7])
link_out[46].range(159, 144) = TPG(link_in[46].range(157, 144), coeff[(46*10)+j], reg[46][8])
link_out[46].range(175, 160) = TPG(link_in[46].range(173, 160), coeff[(46*10)+j], reg[46][9])
link_out[46].range(191, 176) = TPG(link_in[46].range(189, 176), coeff[(46*10)+j], reg[46][10])
link_out[47].range(15,0)=0
link_out[47].range(31, 16) = TPG(link_in[47].range(29, 16), coeff[(47*10)+j], reg[47][0])
link_out[47].range(47, 32) = TPG(link_in[47].range(45, 32), coeff[(47*10)+j], reg[47][1])
link_out[47].range(63, 48) = TPG(link_in[47].range(61, 48), coeff[(47*10)+j], reg[47][2])
link_out[47].range(79, 64) = TPG(link_in[47].range(77, 64), coeff[(47*10)+j], reg[47][3])
link_out[47].range(95, 80) = TPG(link_in[47].range(93, 80), coeff[(47*10)+j], reg[47][4])
link_out[47].range(111, 96) = TPG(link_in[47].range(109, 96), coeff[(47*10)+j], reg[47][5])
link_out[47].range(127, 112) = TPG(link_in[47].range(125, 112), coeff[(47*10)+j], reg[47][6])
link_out[47].range(143, 128) = TPG(link_in[47].range(141, 128), coeff[(47*10)+j], reg[47][7])
link_out[47].range(159, 144) = TPG(link_in[47].range(157, 144), coeff[(47*10)+j], reg[47][8])
link_out[47].range(175, 160) = TPG(link_in[47].range(173, 160), coeff[(47*10)+j], reg[47][9])
link_out[47].range(191, 176) = TPG(link_in[47].range(189, 176), coeff[(47*10)+j], reg[47][10])




	#ifndef __SYNTHESIS__
	cout << "shift " << reg[0][1].shift_reg[0] << " " << reg[0][1].shift_reg[1] << " " << reg[0][1].shift_reg[2] << " " << reg[0][1].shift_reg[3] << endl;
	cout << "peak " << reg[0][1].peak_reg[0] << " " << reg[0][1].peak_reg[1] << endl;
	#endif
	// Comment the following not to overwrite the output
	/*for (int8_t lnk = 0; lnk < N_CH_IN; lnk++) {
#pragma HLS UNROLL
//  pass-through "algo"
        link_out[lnk].range(7,0) = 0;
        link_out[lnk].range(191,8) = link_in[lnk].range(191,8) ;
    }*/
}

