// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "TPG.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic TPG::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic TPG::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> TPG::ap_ST_fsm_pp0_stage0 = "1";
const bool TPG::ap_const_boolean_1 = true;
const sc_lv<32> TPG::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool TPG::ap_const_boolean_0 = false;
const sc_lv<32> TPG::ap_const_lv32_10 = "10000";
const sc_lv<32> TPG::ap_const_lv32_17 = "10111";
const sc_lv<32> TPG::ap_const_lv32_2 = "10";
const sc_lv<32> TPG::ap_const_lv32_13 = "10011";
const sc_lv<32> TPG::ap_const_lv32_C = "1100";
const sc_lv<18> TPG::ap_const_lv18_0 = "000000000000000000";
const sc_lv<5> TPG::ap_const_lv5_0 = "00000";
const sc_lv<24> TPG::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<2> TPG::ap_const_lv2_0 = "00";
const sc_lv<32> TPG::ap_const_lv32_6 = "110";
const sc_lv<32> TPG::ap_const_lv32_18 = "11000";
const sc_lv<32> TPG::ap_const_lv32_11 = "10001";
const sc_lv<32> TPG::ap_const_lv32_12 = "10010";
const sc_lv<7> TPG::ap_const_lv7_0 = "0000000";
const sc_lv<3> TPG::ap_const_lv3_0 = "000";
const sc_lv<16> TPG::ap_const_lv16_3FF = "1111111111";
const sc_lv<32> TPG::ap_const_lv32_A = "1010";
const sc_lv<32> TPG::ap_const_lv32_F = "1111";
const sc_lv<6> TPG::ap_const_lv6_0 = "000000";
const sc_lv<10> TPG::ap_const_lv10_3FF = "1111111111";
const sc_lv<10> TPG::ap_const_lv10_0 = "0000000000";
const sc_lv<25> TPG::ap_const_lv25_1FFFFDD = "1111111111111111111011101";

TPG::TPG(sc_module_name name) : sc_module(name), mVcdFile(0) {
    algo_unpacked_mulbkb_U1 = new algo_unpacked_mulbkb<1,1,13,8,21>("algo_unpacked_mulbkb_U1");
    algo_unpacked_mulbkb_U1->din0(r_V_3_fu_211_p2);
    algo_unpacked_mulbkb_U1->din1(r_V_fu_604_p1);
    algo_unpacked_mulbkb_U1->dout(r_V_fu_604_p2);
    algo_unpacked_mulcud_U2 = new algo_unpacked_mulcud<1,1,7,18,25>("algo_unpacked_mulcud_U2");
    algo_unpacked_mulcud_U2->din0(r_V_6_fu_611_p0);
    algo_unpacked_mulcud_U2->din1(r_V_6_fu_611_p1);
    algo_unpacked_mulcud_U2->dout(r_V_6_fu_611_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_addconv_3_cast_fu_501_p2);
    sensitive << ( tmp_19_fu_484_p2 );
    sensitive << ( tmp_20_fu_490_p2 );

    SC_METHOD(thread_addconv_3_fu_495_p2);
    sensitive << ( tmp4_fu_479_p2 );
    sensitive << ( tmp3_fu_463_p2 );

    SC_METHOD(thread_agg_result_V_1_cast_fu_583_p1);
    sensitive << ( agg_result_V_1_fu_575_p3 );

    SC_METHOD(thread_agg_result_V_1_fu_575_p3);
    sensitive << ( or_cond1_fu_536_p2 );
    sensitive << ( p_phitmp3_fu_567_p3 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp0_0to1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to1 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( agg_result_V_1_cast_fu_583_p1 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( filterOutput_V_cast_fu_528_p1 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( r_0_peak_reg_V_read_1_reg_619_pp0_iter1_reg );

    SC_METHOD(thread_base_V_fu_189_p1);
    sensitive << ( lincoeff_V );

    SC_METHOD(thread_filterOutput_V_cast_fu_528_p1);
    sensitive << ( filterOutput_V_reg_683 );

    SC_METHOD(thread_filterOutput_V_fu_520_p3);
    sensitive << ( or_cond_fu_515_p2 );
    sensitive << ( addconv_3_cast_fu_501_p2 );

    SC_METHOD(thread_icmp1_fu_561_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( tmp_21_fu_551_p4 );

    SC_METHOD(thread_icmp_fu_365_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( tmp_9_fu_355_p4 );

    SC_METHOD(thread_lhs_V_3_2_cast7_fu_387_p1);
    sensitive << ( r_0_shift_reg_V_rea_reg_631 );

    SC_METHOD(thread_lhs_V_fu_203_p1);
    sensitive << ( uncorrectedADC_V_fu_185_p1 );

    SC_METHOD(thread_linearizerOutput_V_1_fu_242_p3);
    sensitive << ( tmp_7_fu_234_p3 );
    sensitive << ( linearizerOutput_V_fu_225_p4 );

    SC_METHOD(thread_linearizerOutput_V_fu_225_p4);
    sensitive << ( r_V_fu_604_p2 );

    SC_METHOD(thread_mult_fu_193_p4);
    sensitive << ( lincoeff_V );

    SC_METHOD(thread_or_cond1_fu_536_p2);
    sensitive << ( tmp_4_reg_668_pp0_iter1_reg );
    sensitive << ( tmp_3_fu_531_p2 );

    SC_METHOD(thread_or_cond_fu_515_p2);
    sensitive << ( tmp_2_reg_663 );
    sensitive << ( tmp_8_fu_507_p3 );

    SC_METHOD(thread_p_neg_cast_fu_269_p1);
    sensitive << ( p_neg_fu_263_p2 );

    SC_METHOD(thread_p_neg_fu_263_p2);
    sensitive << ( p_shl_cast_fu_259_p1 );

    SC_METHOD(thread_p_phitmp3_fu_567_p3);
    sensitive << ( icmp1_fu_561_p2 );
    sensitive << ( tmp_18_fu_547_p1 );

    SC_METHOD(thread_p_shl1_cast_fu_281_p1);
    sensitive << ( p_shl1_fu_273_p3 );

    SC_METHOD(thread_p_shl1_fu_273_p3);
    sensitive << ( r_3_shift_reg_V_i );

    SC_METHOD(thread_p_shl2_cast_fu_397_p1);
    sensitive << ( p_shl2_fu_390_p3 );

    SC_METHOD(thread_p_shl2_fu_390_p3);
    sensitive << ( r_0_shift_reg_V_rea_reg_631 );

    SC_METHOD(thread_p_shl3_cast_fu_428_p1);
    sensitive << ( p_shl3_fu_421_p3 );

    SC_METHOD(thread_p_shl3_fu_421_p3);
    sensitive << ( linearizerOutput_V_1_reg_625 );

    SC_METHOD(thread_p_shl4_cast_fu_439_p1);
    sensitive << ( p_shl4_fu_432_p3 );

    SC_METHOD(thread_p_shl4_fu_432_p3);
    sensitive << ( linearizerOutput_V_1_reg_625 );

    SC_METHOD(thread_p_shl_cast_fu_259_p1);
    sensitive << ( p_shl_fu_251_p3 );

    SC_METHOD(thread_p_shl_fu_251_p3);
    sensitive << ( r_3_shift_reg_V_i );

    SC_METHOD(thread_r_0_shift_reg_V_o);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_7_fu_234_p3 );
    sensitive << ( linearizerOutput_V_fu_225_p4 );

    SC_METHOD(thread_r_0_shift_reg_V_o_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_r_1_shift_reg_V_o);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_ce );
    sensitive << ( r_0_shift_reg_V_i );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_r_1_shift_reg_V_o_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_r_2_shift_reg_V_o);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_ce );
    sensitive << ( r_1_shift_reg_V_i );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_r_2_shift_reg_V_o_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_r_3_shift_reg_V_o);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_ce );
    sensitive << ( r_2_shift_reg_V_i );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_r_3_shift_reg_V_o_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_r_V_3_fu_211_p2);
    sensitive << ( lhs_V_fu_203_p1 );
    sensitive << ( rhs_V_fu_207_p1 );

    SC_METHOD(thread_r_V_4_fu_285_p2);
    sensitive << ( p_neg_cast_fu_269_p1 );
    sensitive << ( p_shl1_cast_fu_281_p1 );

    SC_METHOD(thread_r_V_6_2_fu_401_p2);
    sensitive << ( p_shl2_cast_fu_397_p1 );
    sensitive << ( lhs_V_3_2_cast7_fu_387_p1 );

    SC_METHOD(thread_r_V_6_3_fu_443_p2);
    sensitive << ( p_shl3_cast_fu_428_p1 );
    sensitive << ( p_shl4_cast_fu_439_p1 );

    SC_METHOD(thread_r_V_6_fu_611_p0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_r_V_6_fu_611_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( r_V_6_fu_611_p10 );

    SC_METHOD(thread_r_V_6_fu_611_p10);
    sensitive << ( r_2_shift_reg_V_i );

    SC_METHOD(thread_r_V_fu_604_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( r_V_fu_604_p10 );

    SC_METHOD(thread_r_V_fu_604_p10);
    sensitive << ( mult_fu_193_p4 );

    SC_METHOD(thread_rhs_V_fu_207_p1);
    sensitive << ( base_V_fu_189_p1 );

    SC_METHOD(thread_tmp3_fu_463_p2);
    sensitive << ( tmp_18_1_cast_fu_384_p1 );
    sensitive << ( tmp_11_fu_417_p1 );

    SC_METHOD(thread_tmp4_fu_479_p2);
    sensitive << ( tmp_578_reg_637 );
    sensitive << ( tmp5_fu_469_p2 );

    SC_METHOD(thread_tmp5_fu_469_p2);
    sensitive << ( mul_V_reg_642 );
    sensitive << ( tmp_14_fu_459_p1 );

    SC_METHOD(thread_tmpPeak_V_fu_541_p3);
    sensitive << ( icmp_reg_673_pp0_iter1_reg );
    sensitive << ( tmp_6_reg_678_pp0_iter1_reg );

    SC_METHOD(thread_tmp_10_fu_407_p4);
    sensitive << ( r_V_6_2_fu_401_p2 );

    SC_METHOD(thread_tmp_11_fu_417_p1);
    sensitive << ( tmp_10_fu_407_p4 );

    SC_METHOD(thread_tmp_13_fu_449_p4);
    sensitive << ( r_V_6_3_fu_443_p2 );

    SC_METHOD(thread_tmp_14_fu_459_p1);
    sensitive << ( tmp_13_fu_449_p4 );

    SC_METHOD(thread_tmp_16_fu_474_p2);
    sensitive << ( tmp_15_reg_653 );
    sensitive << ( tmp_13_fu_449_p4 );

    SC_METHOD(thread_tmp_18_1_cast_fu_384_p1);
    sensitive << ( tmp_18_1_reg_647 );

    SC_METHOD(thread_tmp_18_fu_547_p1);
    sensitive << ( tmpPeak_V_fu_541_p3 );

    SC_METHOD(thread_tmp_19_fu_484_p2);
    sensitive << ( tmp_10_fu_407_p4 );
    sensitive << ( tmp_fu_381_p1 );

    SC_METHOD(thread_tmp_20_fu_490_p2);
    sensitive << ( tmp_17_reg_658 );
    sensitive << ( tmp_16_fu_474_p2 );

    SC_METHOD(thread_tmp_21_fu_551_p4);
    sensitive << ( tmpPeak_V_fu_541_p3 );

    SC_METHOD(thread_tmp_2_fu_343_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( r_3_shift_reg_V_i );

    SC_METHOD(thread_tmp_3_fu_531_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( r_0_peak_reg_V_read_1_reg_619_pp0_iter1_reg );
    sensitive << ( filterOutput_V_cast_fu_528_p1 );

    SC_METHOD(thread_tmp_4_fu_349_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( r_0_peak_reg_V_read );
    sensitive << ( r_1_peak_reg_V_read );

    SC_METHOD(thread_tmp_7_fu_234_p3);
    sensitive << ( r_V_3_fu_211_p2 );

    SC_METHOD(thread_tmp_8_fu_507_p3);
    sensitive << ( addconv_3_fu_495_p2 );

    SC_METHOD(thread_tmp_9_fu_355_p4);
    sensitive << ( r_0_peak_reg_V_read );

    SC_METHOD(thread_tmp_fu_381_p1);
    sensitive << ( tmp_18_1_reg_647 );

    SC_METHOD(thread_uncorrectedADC_V_fu_185_p1);
    sensitive << ( data_int_V );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "TPG_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
    sc_trace(mVcdFile, data_int_V, "(port)data_int_V");
    sc_trace(mVcdFile, lincoeff_V, "(port)lincoeff_V");
    sc_trace(mVcdFile, r_0_shift_reg_V_i, "(port)r_0_shift_reg_V_i");
    sc_trace(mVcdFile, r_0_shift_reg_V_o, "(port)r_0_shift_reg_V_o");
    sc_trace(mVcdFile, r_0_shift_reg_V_o_ap_vld, "(port)r_0_shift_reg_V_o_ap_vld");
    sc_trace(mVcdFile, r_1_shift_reg_V_i, "(port)r_1_shift_reg_V_i");
    sc_trace(mVcdFile, r_1_shift_reg_V_o, "(port)r_1_shift_reg_V_o");
    sc_trace(mVcdFile, r_1_shift_reg_V_o_ap_vld, "(port)r_1_shift_reg_V_o_ap_vld");
    sc_trace(mVcdFile, r_2_shift_reg_V_i, "(port)r_2_shift_reg_V_i");
    sc_trace(mVcdFile, r_2_shift_reg_V_o, "(port)r_2_shift_reg_V_o");
    sc_trace(mVcdFile, r_2_shift_reg_V_o_ap_vld, "(port)r_2_shift_reg_V_o_ap_vld");
    sc_trace(mVcdFile, r_3_shift_reg_V_i, "(port)r_3_shift_reg_V_i");
    sc_trace(mVcdFile, r_3_shift_reg_V_o, "(port)r_3_shift_reg_V_o");
    sc_trace(mVcdFile, r_3_shift_reg_V_o_ap_vld, "(port)r_3_shift_reg_V_o_ap_vld");
    sc_trace(mVcdFile, r_0_peak_reg_V_read, "(port)r_0_peak_reg_V_read");
    sc_trace(mVcdFile, r_1_peak_reg_V_read, "(port)r_1_peak_reg_V_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, r_0_peak_reg_V_read_1_reg_619, "r_0_peak_reg_V_read_1_reg_619");
    sc_trace(mVcdFile, r_0_peak_reg_V_read_1_reg_619_pp0_iter1_reg, "r_0_peak_reg_V_read_1_reg_619_pp0_iter1_reg");
    sc_trace(mVcdFile, linearizerOutput_V_1_fu_242_p3, "linearizerOutput_V_1_fu_242_p3");
    sc_trace(mVcdFile, linearizerOutput_V_1_reg_625, "linearizerOutput_V_1_reg_625");
    sc_trace(mVcdFile, r_0_shift_reg_V_rea_reg_631, "r_0_shift_reg_V_rea_reg_631");
    sc_trace(mVcdFile, tmp_578_reg_637, "tmp_578_reg_637");
    sc_trace(mVcdFile, mul_V_reg_642, "mul_V_reg_642");
    sc_trace(mVcdFile, tmp_18_1_reg_647, "tmp_18_1_reg_647");
    sc_trace(mVcdFile, tmp_15_reg_653, "tmp_15_reg_653");
    sc_trace(mVcdFile, tmp_17_reg_658, "tmp_17_reg_658");
    sc_trace(mVcdFile, tmp_2_fu_343_p2, "tmp_2_fu_343_p2");
    sc_trace(mVcdFile, tmp_2_reg_663, "tmp_2_reg_663");
    sc_trace(mVcdFile, tmp_4_fu_349_p2, "tmp_4_fu_349_p2");
    sc_trace(mVcdFile, tmp_4_reg_668, "tmp_4_reg_668");
    sc_trace(mVcdFile, tmp_4_reg_668_pp0_iter1_reg, "tmp_4_reg_668_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_fu_365_p2, "icmp_fu_365_p2");
    sc_trace(mVcdFile, icmp_reg_673, "icmp_reg_673");
    sc_trace(mVcdFile, icmp_reg_673_pp0_iter1_reg, "icmp_reg_673_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_6_reg_678, "tmp_6_reg_678");
    sc_trace(mVcdFile, tmp_6_reg_678_pp0_iter1_reg, "tmp_6_reg_678_pp0_iter1_reg");
    sc_trace(mVcdFile, filterOutput_V_fu_520_p3, "filterOutput_V_fu_520_p3");
    sc_trace(mVcdFile, filterOutput_V_reg_683, "filterOutput_V_reg_683");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, uncorrectedADC_V_fu_185_p1, "uncorrectedADC_V_fu_185_p1");
    sc_trace(mVcdFile, base_V_fu_189_p1, "base_V_fu_189_p1");
    sc_trace(mVcdFile, lhs_V_fu_203_p1, "lhs_V_fu_203_p1");
    sc_trace(mVcdFile, rhs_V_fu_207_p1, "rhs_V_fu_207_p1");
    sc_trace(mVcdFile, r_V_3_fu_211_p2, "r_V_3_fu_211_p2");
    sc_trace(mVcdFile, mult_fu_193_p4, "mult_fu_193_p4");
    sc_trace(mVcdFile, r_V_fu_604_p2, "r_V_fu_604_p2");
    sc_trace(mVcdFile, tmp_7_fu_234_p3, "tmp_7_fu_234_p3");
    sc_trace(mVcdFile, linearizerOutput_V_fu_225_p4, "linearizerOutput_V_fu_225_p4");
    sc_trace(mVcdFile, p_shl_fu_251_p3, "p_shl_fu_251_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_259_p1, "p_shl_cast_fu_259_p1");
    sc_trace(mVcdFile, p_neg_fu_263_p2, "p_neg_fu_263_p2");
    sc_trace(mVcdFile, p_shl1_fu_273_p3, "p_shl1_fu_273_p3");
    sc_trace(mVcdFile, p_neg_cast_fu_269_p1, "p_neg_cast_fu_269_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_281_p1, "p_shl1_cast_fu_281_p1");
    sc_trace(mVcdFile, r_V_4_fu_285_p2, "r_V_4_fu_285_p2");
    sc_trace(mVcdFile, r_V_6_fu_611_p2, "r_V_6_fu_611_p2");
    sc_trace(mVcdFile, tmp_9_fu_355_p4, "tmp_9_fu_355_p4");
    sc_trace(mVcdFile, p_shl2_fu_390_p3, "p_shl2_fu_390_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_397_p1, "p_shl2_cast_fu_397_p1");
    sc_trace(mVcdFile, lhs_V_3_2_cast7_fu_387_p1, "lhs_V_3_2_cast7_fu_387_p1");
    sc_trace(mVcdFile, r_V_6_2_fu_401_p2, "r_V_6_2_fu_401_p2");
    sc_trace(mVcdFile, tmp_10_fu_407_p4, "tmp_10_fu_407_p4");
    sc_trace(mVcdFile, p_shl3_fu_421_p3, "p_shl3_fu_421_p3");
    sc_trace(mVcdFile, p_shl4_fu_432_p3, "p_shl4_fu_432_p3");
    sc_trace(mVcdFile, p_shl3_cast_fu_428_p1, "p_shl3_cast_fu_428_p1");
    sc_trace(mVcdFile, p_shl4_cast_fu_439_p1, "p_shl4_cast_fu_439_p1");
    sc_trace(mVcdFile, r_V_6_3_fu_443_p2, "r_V_6_3_fu_443_p2");
    sc_trace(mVcdFile, tmp_13_fu_449_p4, "tmp_13_fu_449_p4");
    sc_trace(mVcdFile, tmp_18_1_cast_fu_384_p1, "tmp_18_1_cast_fu_384_p1");
    sc_trace(mVcdFile, tmp_11_fu_417_p1, "tmp_11_fu_417_p1");
    sc_trace(mVcdFile, tmp_14_fu_459_p1, "tmp_14_fu_459_p1");
    sc_trace(mVcdFile, tmp5_fu_469_p2, "tmp5_fu_469_p2");
    sc_trace(mVcdFile, tmp_fu_381_p1, "tmp_fu_381_p1");
    sc_trace(mVcdFile, tmp_16_fu_474_p2, "tmp_16_fu_474_p2");
    sc_trace(mVcdFile, tmp4_fu_479_p2, "tmp4_fu_479_p2");
    sc_trace(mVcdFile, tmp3_fu_463_p2, "tmp3_fu_463_p2");
    sc_trace(mVcdFile, tmp_19_fu_484_p2, "tmp_19_fu_484_p2");
    sc_trace(mVcdFile, tmp_20_fu_490_p2, "tmp_20_fu_490_p2");
    sc_trace(mVcdFile, addconv_3_fu_495_p2, "addconv_3_fu_495_p2");
    sc_trace(mVcdFile, tmp_8_fu_507_p3, "tmp_8_fu_507_p3");
    sc_trace(mVcdFile, or_cond_fu_515_p2, "or_cond_fu_515_p2");
    sc_trace(mVcdFile, addconv_3_cast_fu_501_p2, "addconv_3_cast_fu_501_p2");
    sc_trace(mVcdFile, filterOutput_V_cast_fu_528_p1, "filterOutput_V_cast_fu_528_p1");
    sc_trace(mVcdFile, tmp_3_fu_531_p2, "tmp_3_fu_531_p2");
    sc_trace(mVcdFile, tmpPeak_V_fu_541_p3, "tmpPeak_V_fu_541_p3");
    sc_trace(mVcdFile, tmp_21_fu_551_p4, "tmp_21_fu_551_p4");
    sc_trace(mVcdFile, icmp1_fu_561_p2, "icmp1_fu_561_p2");
    sc_trace(mVcdFile, tmp_18_fu_547_p1, "tmp_18_fu_547_p1");
    sc_trace(mVcdFile, or_cond1_fu_536_p2, "or_cond1_fu_536_p2");
    sc_trace(mVcdFile, p_phitmp3_fu_567_p3, "p_phitmp3_fu_567_p3");
    sc_trace(mVcdFile, agg_result_V_1_fu_575_p3, "agg_result_V_1_fu_575_p3");
    sc_trace(mVcdFile, agg_result_V_1_cast_fu_583_p1, "agg_result_V_1_cast_fu_583_p1");
    sc_trace(mVcdFile, r_V_fu_604_p1, "r_V_fu_604_p1");
    sc_trace(mVcdFile, r_V_6_fu_611_p0, "r_V_6_fu_611_p0");
    sc_trace(mVcdFile, r_V_6_fu_611_p1, "r_V_6_fu_611_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to1, "ap_idle_pp0_0to1");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, r_V_6_fu_611_p10, "r_V_6_fu_611_p10");
    sc_trace(mVcdFile, r_V_fu_604_p10, "r_V_fu_604_p10");
#endif

    }
}

TPG::~TPG() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete algo_unpacked_mulbkb_U1;
    delete algo_unpacked_mulcud_U2;
}

void TPG::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        filterOutput_V_reg_683 = filterOutput_V_fu_520_p3.read();
        icmp_reg_673 = icmp_fu_365_p2.read();
        icmp_reg_673_pp0_iter1_reg = icmp_reg_673.read();
        linearizerOutput_V_1_reg_625 = linearizerOutput_V_1_fu_242_p3.read();
        mul_V_reg_642 = r_V_6_fu_611_p2.read().range(24, 6);
        r_0_peak_reg_V_read_1_reg_619 = r_0_peak_reg_V_read.read();
        r_0_peak_reg_V_read_1_reg_619_pp0_iter1_reg = r_0_peak_reg_V_read_1_reg_619.read();
        r_0_shift_reg_V_rea_reg_631 = r_0_shift_reg_V_i.read();
        tmp_15_reg_653 = r_V_6_fu_611_p2.read().range(23, 6);
        tmp_17_reg_658 = r_V_4_fu_285_p2.read().range(23, 6);
        tmp_18_1_reg_647 = r_1_shift_reg_V_i.read().range(17, 2);
        tmp_2_reg_663 = tmp_2_fu_343_p2.read();
        tmp_4_reg_668 = tmp_4_fu_349_p2.read();
        tmp_4_reg_668_pp0_iter1_reg = tmp_4_reg_668.read();
        tmp_578_reg_637 = r_V_4_fu_285_p2.read().range(24, 6);
        tmp_6_reg_678 = r_0_peak_reg_V_read.read().range(17, 2);
        tmp_6_reg_678_pp0_iter1_reg = tmp_6_reg_678.read();
    }
}

void TPG::thread_addconv_3_cast_fu_501_p2() {
    addconv_3_cast_fu_501_p2 = (!tmp_19_fu_484_p2.read().is_01() || !tmp_20_fu_490_p2.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_19_fu_484_p2.read()) + sc_biguint<18>(tmp_20_fu_490_p2.read()));
}

void TPG::thread_addconv_3_fu_495_p2() {
    addconv_3_fu_495_p2 = (!tmp4_fu_479_p2.read().is_01() || !tmp3_fu_463_p2.read().is_01())? sc_lv<19>(): (sc_biguint<19>(tmp4_fu_479_p2.read()) + sc_biguint<19>(tmp3_fu_463_p2.read()));
}

void TPG::thread_agg_result_V_1_cast_fu_583_p1() {
    agg_result_V_1_cast_fu_583_p1 = esl_zext<16,10>(agg_result_V_1_fu_575_p3.read());
}

void TPG::thread_agg_result_V_1_fu_575_p3() {
    agg_result_V_1_fu_575_p3 = (!or_cond1_fu_536_p2.read()[0].is_01())? sc_lv<10>(): ((or_cond1_fu_536_p2.read()[0].to_bool())? p_phitmp3_fu_567_p3.read(): ap_const_lv10_0);
}

void TPG::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void TPG::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void TPG::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void TPG::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void TPG::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_0));
}

void TPG::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0);
}

void TPG::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void TPG::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void TPG::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void TPG::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void TPG::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void TPG::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void TPG::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void TPG::thread_ap_idle_pp0_0to1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0_0to1 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to1 = ap_const_logic_0;
    }
}

void TPG::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void TPG::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to1.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void TPG::thread_ap_return_0() {
    ap_return_0 = agg_result_V_1_cast_fu_583_p1.read();
}

void TPG::thread_ap_return_1() {
    ap_return_1 = filterOutput_V_cast_fu_528_p1.read();
}

void TPG::thread_ap_return_2() {
    ap_return_2 = r_0_peak_reg_V_read_1_reg_619_pp0_iter1_reg.read();
}

void TPG::thread_base_V_fu_189_p1() {
    base_V_fu_189_p1 = lincoeff_V.read().range(12-1, 0);
}

void TPG::thread_filterOutput_V_cast_fu_528_p1() {
    filterOutput_V_cast_fu_528_p1 = esl_zext<19,18>(filterOutput_V_reg_683.read());
}

void TPG::thread_filterOutput_V_fu_520_p3() {
    filterOutput_V_fu_520_p3 = (!or_cond_fu_515_p2.read()[0].is_01())? sc_lv<18>(): ((or_cond_fu_515_p2.read()[0].to_bool())? ap_const_lv18_0: addconv_3_cast_fu_501_p2.read());
}

void TPG::thread_icmp1_fu_561_p2() {
    icmp1_fu_561_p2 = (!tmp_21_fu_551_p4.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_21_fu_551_p4.read() != ap_const_lv6_0);
}

void TPG::thread_icmp_fu_365_p2() {
    icmp_fu_365_p2 = (!tmp_9_fu_355_p4.read().is_01() || !ap_const_lv7_0.is_01())? sc_lv<1>(): (sc_bigint<7>(tmp_9_fu_355_p4.read()) > sc_bigint<7>(ap_const_lv7_0));
}

void TPG::thread_lhs_V_3_2_cast7_fu_387_p1() {
    lhs_V_3_2_cast7_fu_387_p1 = esl_zext<24,18>(r_0_shift_reg_V_rea_reg_631.read());
}

void TPG::thread_lhs_V_fu_203_p1() {
    lhs_V_fu_203_p1 = esl_zext<13,12>(uncorrectedADC_V_fu_185_p1.read());
}

void TPG::thread_linearizerOutput_V_1_fu_242_p3() {
    linearizerOutput_V_1_fu_242_p3 = (!tmp_7_fu_234_p3.read()[0].is_01())? sc_lv<18>(): ((tmp_7_fu_234_p3.read()[0].to_bool())? ap_const_lv18_0: linearizerOutput_V_fu_225_p4.read());
}

void TPG::thread_linearizerOutput_V_fu_225_p4() {
    linearizerOutput_V_fu_225_p4 = r_V_fu_604_p2.read().range(19, 2);
}

void TPG::thread_mult_fu_193_p4() {
    mult_fu_193_p4 = lincoeff_V.read().range(23, 16);
}

void TPG::thread_or_cond1_fu_536_p2() {
    or_cond1_fu_536_p2 = (tmp_3_fu_531_p2.read() & tmp_4_reg_668_pp0_iter1_reg.read());
}

void TPG::thread_or_cond_fu_515_p2() {
    or_cond_fu_515_p2 = (tmp_8_fu_507_p3.read() | tmp_2_reg_663.read());
}

void TPG::thread_p_neg_cast_fu_269_p1() {
    p_neg_cast_fu_269_p1 = esl_sext<25,24>(p_neg_fu_263_p2.read());
}

void TPG::thread_p_neg_fu_263_p2() {
    p_neg_fu_263_p2 = (!ap_const_lv24_0.is_01() || !p_shl_cast_fu_259_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(ap_const_lv24_0) - sc_biguint<24>(p_shl_cast_fu_259_p1.read()));
}

void TPG::thread_p_phitmp3_fu_567_p3() {
    p_phitmp3_fu_567_p3 = (!icmp1_fu_561_p2.read()[0].is_01())? sc_lv<10>(): ((icmp1_fu_561_p2.read()[0].to_bool())? ap_const_lv10_3FF: tmp_18_fu_547_p1.read());
}

void TPG::thread_p_shl1_cast_fu_281_p1() {
    p_shl1_cast_fu_281_p1 = esl_zext<25,20>(p_shl1_fu_273_p3.read());
}

void TPG::thread_p_shl1_fu_273_p3() {
    p_shl1_fu_273_p3 = esl_concat<18,2>(r_3_shift_reg_V_i.read(), ap_const_lv2_0);
}

void TPG::thread_p_shl2_cast_fu_397_p1() {
    p_shl2_cast_fu_397_p1 = esl_zext<24,23>(p_shl2_fu_390_p3.read());
}

void TPG::thread_p_shl2_fu_390_p3() {
    p_shl2_fu_390_p3 = esl_concat<18,5>(r_0_shift_reg_V_rea_reg_631.read(), ap_const_lv5_0);
}

void TPG::thread_p_shl3_cast_fu_428_p1() {
    p_shl3_cast_fu_428_p1 = esl_zext<24,23>(p_shl3_fu_421_p3.read());
}

void TPG::thread_p_shl3_fu_421_p3() {
    p_shl3_fu_421_p3 = esl_concat<18,5>(linearizerOutput_V_1_reg_625.read(), ap_const_lv5_0);
}

void TPG::thread_p_shl4_cast_fu_439_p1() {
    p_shl4_cast_fu_439_p1 = esl_zext<24,21>(p_shl4_fu_432_p3.read());
}

void TPG::thread_p_shl4_fu_432_p3() {
    p_shl4_fu_432_p3 = esl_concat<18,3>(linearizerOutput_V_1_reg_625.read(), ap_const_lv3_0);
}

void TPG::thread_p_shl_cast_fu_259_p1() {
    p_shl_cast_fu_259_p1 = esl_zext<24,23>(p_shl_fu_251_p3.read());
}

void TPG::thread_p_shl_fu_251_p3() {
    p_shl_fu_251_p3 = esl_concat<18,5>(r_3_shift_reg_V_i.read(), ap_const_lv5_0);
}

void TPG::thread_r_0_shift_reg_V_o() {
    r_0_shift_reg_V_o = (!tmp_7_fu_234_p3.read()[0].is_01())? sc_lv<18>(): ((tmp_7_fu_234_p3.read()[0].to_bool())? ap_const_lv18_0: linearizerOutput_V_fu_225_p4.read());
}

void TPG::thread_r_0_shift_reg_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        r_0_shift_reg_V_o_ap_vld = ap_const_logic_1;
    } else {
        r_0_shift_reg_V_o_ap_vld = ap_const_logic_0;
    }
}

void TPG::thread_r_1_shift_reg_V_o() {
    r_1_shift_reg_V_o = r_0_shift_reg_V_i.read();
}

void TPG::thread_r_1_shift_reg_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        r_1_shift_reg_V_o_ap_vld = ap_const_logic_1;
    } else {
        r_1_shift_reg_V_o_ap_vld = ap_const_logic_0;
    }
}

void TPG::thread_r_2_shift_reg_V_o() {
    r_2_shift_reg_V_o = r_1_shift_reg_V_i.read();
}

void TPG::thread_r_2_shift_reg_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        r_2_shift_reg_V_o_ap_vld = ap_const_logic_1;
    } else {
        r_2_shift_reg_V_o_ap_vld = ap_const_logic_0;
    }
}

void TPG::thread_r_3_shift_reg_V_o() {
    r_3_shift_reg_V_o = r_2_shift_reg_V_i.read();
}

void TPG::thread_r_3_shift_reg_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        r_3_shift_reg_V_o_ap_vld = ap_const_logic_1;
    } else {
        r_3_shift_reg_V_o_ap_vld = ap_const_logic_0;
    }
}

void TPG::thread_r_V_3_fu_211_p2() {
    r_V_3_fu_211_p2 = (!lhs_V_fu_203_p1.read().is_01() || !rhs_V_fu_207_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(lhs_V_fu_203_p1.read()) - sc_biguint<13>(rhs_V_fu_207_p1.read()));
}

void TPG::thread_r_V_4_fu_285_p2() {
    r_V_4_fu_285_p2 = (!p_neg_cast_fu_269_p1.read().is_01() || !p_shl1_cast_fu_281_p1.read().is_01())? sc_lv<25>(): (sc_bigint<25>(p_neg_cast_fu_269_p1.read()) - sc_biguint<25>(p_shl1_cast_fu_281_p1.read()));
}

void TPG::thread_r_V_6_2_fu_401_p2() {
    r_V_6_2_fu_401_p2 = (!p_shl2_cast_fu_397_p1.read().is_01() || !lhs_V_3_2_cast7_fu_387_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(p_shl2_cast_fu_397_p1.read()) - sc_biguint<24>(lhs_V_3_2_cast7_fu_387_p1.read()));
}

void TPG::thread_r_V_6_3_fu_443_p2() {
    r_V_6_3_fu_443_p2 = (!p_shl3_cast_fu_428_p1.read().is_01() || !p_shl4_cast_fu_439_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(p_shl3_cast_fu_428_p1.read()) - sc_biguint<24>(p_shl4_cast_fu_439_p1.read()));
}

void TPG::thread_r_V_6_fu_611_p0() {
    r_V_6_fu_611_p0 =  (sc_lv<7>) (ap_const_lv25_1FFFFDD);
}

void TPG::thread_r_V_6_fu_611_p1() {
    r_V_6_fu_611_p1 =  (sc_lv<18>) (r_V_6_fu_611_p10.read());
}

void TPG::thread_r_V_6_fu_611_p10() {
    r_V_6_fu_611_p10 = esl_zext<25,18>(r_2_shift_reg_V_i.read());
}

void TPG::thread_r_V_fu_604_p1() {
    r_V_fu_604_p1 =  (sc_lv<8>) (r_V_fu_604_p10.read());
}

void TPG::thread_r_V_fu_604_p10() {
    r_V_fu_604_p10 = esl_zext<21,8>(mult_fu_193_p4.read());
}

void TPG::thread_rhs_V_fu_207_p1() {
    rhs_V_fu_207_p1 = esl_zext<13,12>(base_V_fu_189_p1.read());
}

void TPG::thread_tmp3_fu_463_p2() {
    tmp3_fu_463_p2 = (!tmp_18_1_cast_fu_384_p1.read().is_01() || !tmp_11_fu_417_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(tmp_18_1_cast_fu_384_p1.read()) + sc_bigint<19>(tmp_11_fu_417_p1.read()));
}

void TPG::thread_tmp4_fu_479_p2() {
    tmp4_fu_479_p2 = (!tmp5_fu_469_p2.read().is_01() || !tmp_578_reg_637.read().is_01())? sc_lv<19>(): (sc_biguint<19>(tmp5_fu_469_p2.read()) + sc_biguint<19>(tmp_578_reg_637.read()));
}

void TPG::thread_tmp5_fu_469_p2() {
    tmp5_fu_469_p2 = (!mul_V_reg_642.read().is_01() || !tmp_14_fu_459_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(mul_V_reg_642.read()) + sc_bigint<19>(tmp_14_fu_459_p1.read()));
}

void TPG::thread_tmpPeak_V_fu_541_p3() {
    tmpPeak_V_fu_541_p3 = (!icmp_reg_673_pp0_iter1_reg.read()[0].is_01())? sc_lv<16>(): ((icmp_reg_673_pp0_iter1_reg.read()[0].to_bool())? ap_const_lv16_3FF: tmp_6_reg_678_pp0_iter1_reg.read());
}

void TPG::thread_tmp_10_fu_407_p4() {
    tmp_10_fu_407_p4 = r_V_6_2_fu_401_p2.read().range(23, 6);
}

void TPG::thread_tmp_11_fu_417_p1() {
    tmp_11_fu_417_p1 = esl_sext<19,18>(tmp_10_fu_407_p4.read());
}

void TPG::thread_tmp_13_fu_449_p4() {
    tmp_13_fu_449_p4 = r_V_6_3_fu_443_p2.read().range(23, 6);
}

void TPG::thread_tmp_14_fu_459_p1() {
    tmp_14_fu_459_p1 = esl_sext<19,18>(tmp_13_fu_449_p4.read());
}

void TPG::thread_tmp_16_fu_474_p2() {
    tmp_16_fu_474_p2 = (!tmp_13_fu_449_p4.read().is_01() || !tmp_15_reg_653.read().is_01())? sc_lv<18>(): (sc_bigint<18>(tmp_13_fu_449_p4.read()) + sc_biguint<18>(tmp_15_reg_653.read()));
}

void TPG::thread_tmp_18_1_cast_fu_384_p1() {
    tmp_18_1_cast_fu_384_p1 = esl_zext<19,16>(tmp_18_1_reg_647.read());
}

void TPG::thread_tmp_18_fu_547_p1() {
    tmp_18_fu_547_p1 = tmpPeak_V_fu_541_p3.read().range(10-1, 0);
}

void TPG::thread_tmp_19_fu_484_p2() {
    tmp_19_fu_484_p2 = (!tmp_10_fu_407_p4.read().is_01() || !tmp_fu_381_p1.read().is_01())? sc_lv<18>(): (sc_bigint<18>(tmp_10_fu_407_p4.read()) + sc_biguint<18>(tmp_fu_381_p1.read()));
}

void TPG::thread_tmp_20_fu_490_p2() {
    tmp_20_fu_490_p2 = (!tmp_17_reg_658.read().is_01() || !tmp_16_fu_474_p2.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_17_reg_658.read()) + sc_biguint<18>(tmp_16_fu_474_p2.read()));
}

void TPG::thread_tmp_21_fu_551_p4() {
    tmp_21_fu_551_p4 = tmpPeak_V_fu_541_p3.read().range(15, 10);
}

void TPG::thread_tmp_2_fu_343_p2() {
    tmp_2_fu_343_p2 = (!r_3_shift_reg_V_i.read().is_01() || !ap_const_lv18_0.is_01())? sc_lv<1>(): sc_lv<1>(r_3_shift_reg_V_i.read() == ap_const_lv18_0);
}

void TPG::thread_tmp_3_fu_531_p2() {
    tmp_3_fu_531_p2 = (!filterOutput_V_cast_fu_528_p1.read().is_01() || !r_0_peak_reg_V_read_1_reg_619_pp0_iter1_reg.read().is_01())? sc_lv<1>(): (sc_bigint<19>(filterOutput_V_cast_fu_528_p1.read()) < sc_bigint<19>(r_0_peak_reg_V_read_1_reg_619_pp0_iter1_reg.read()));
}

void TPG::thread_tmp_4_fu_349_p2() {
    tmp_4_fu_349_p2 = (!r_0_peak_reg_V_read.read().is_01() || !r_1_peak_reg_V_read.read().is_01())? sc_lv<1>(): (sc_bigint<19>(r_0_peak_reg_V_read.read()) > sc_bigint<19>(r_1_peak_reg_V_read.read()));
}

void TPG::thread_tmp_7_fu_234_p3() {
    tmp_7_fu_234_p3 = r_V_3_fu_211_p2.read().range(12, 12);
}

void TPG::thread_tmp_8_fu_507_p3() {
    tmp_8_fu_507_p3 = addconv_3_fu_495_p2.read().range(18, 18);
}

void TPG::thread_tmp_9_fu_355_p4() {
    tmp_9_fu_355_p4 = r_0_peak_reg_V_read.read().range(18, 12);
}

void TPG::thread_tmp_fu_381_p1() {
    tmp_fu_381_p1 = esl_zext<18,16>(tmp_18_1_reg_647.read());
}

void TPG::thread_uncorrectedADC_V_fu_185_p1() {
    uncorrectedADC_V_fu_185_p1 = data_int_V.read().range(12-1, 0);
}

void TPG::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

